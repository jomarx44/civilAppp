{"ast":null,"code":"var _jsxFileName = \"/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/screens/LinkAccount/LinkAccount.js\";\nimport React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ContainedButton, Input, KeyboardShift, Title, Description } from \"../../components\";\nimport PNDatePicker from \"../../library/components/PNDatePicker\";\nimport { FormContentView, FormHeaderView, FormScrollView, StackButtonView } from \"../../layouts\";\nexport var LinkAccount = function LinkAccount(props) {\n  var data = props.data,\n      invalids = props.invalids,\n      isSubmitting = props.isSubmitting,\n      _onBlur = props.onBlur,\n      onChange = props.onChange,\n      onSubmit = props.onSubmit;\n  var inputAccountNumber = useRef();\n  var inputFirstname = useRef();\n  var inputLastname = useRef();\n  var inputMiddlename = useRef();\n  var inputTIN = useRef();\n  return React.createElement(KeyboardShift, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(FormScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(FormHeaderView, {\n    style: styles.formHeaderView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Link My Account\"), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Please fill in the required fields to link your account.\")), React.createElement(FormContentView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    label: \"Acccount Number\",\n    onChangeText: function onChangeText(value) {\n      onChange(\"accountNumber\", value);\n    },\n    ref: inputAccountNumber,\n    onSubmitEditing: function onSubmitEditing() {\n      return inputFirstname.current.focus();\n    },\n    onBlur: function onBlur() {\n      return _onBlur(\"accountNumber\");\n    },\n    invalidText: invalids.accountNumber && invalids.accountNumber[0],\n    value: data.accountNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    autoCompleteType: \"name\",\n    label: \"First Name\",\n    onChangeText: function onChangeText(value) {\n      onChange(\"firstName\", value);\n    },\n    ref: inputFirstname,\n    onSubmitEditing: function onSubmitEditing() {\n      return inputMiddlename.current.focus();\n    },\n    onBlur: function onBlur() {\n      return _onBlur(\"firstName\");\n    },\n    invalidText: invalids.firstName && invalids.firstName[0],\n    value: data.firstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    autoCompleteType: \"name\",\n    label: \"Middle Name\",\n    onChangeText: function onChangeText(value) {\n      onChange(\"middleName\", value);\n    },\n    ref: inputMiddlename,\n    onSubmitEditing: function onSubmitEditing() {\n      return inputLastname.current.focus();\n    },\n    onBlur: function onBlur() {\n      return _onBlur(\"middleName\");\n    },\n    invalidText: invalids.middleName && invalids.middleName[0],\n    value: data.middleName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    autoCompleteType: \"name\",\n    label: \"Last Name\",\n    onChangeText: function onChangeText(value) {\n      onChange(\"lastName\", value);\n    },\n    ref: inputLastname,\n    onBlur: function onBlur() {\n      return _onBlur(\"lastName\");\n    },\n    invalidText: invalids.lastName && invalids.lastName[0],\n    value: data.lastName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), React.createElement(PNDatePicker, {\n    title: \"Date of Birth\",\n    placeHolderText: \"Select Date of Birth\",\n    defaultDate: data.birthDate,\n    onDateChange: function onDateChange(date) {\n      return onChange(\"birthDate\", date);\n    },\n    maximumDate: new Date(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    label: \"TIN\",\n    onChangeText: function onChangeText(value) {\n      onChange(\"tin\", value);\n    },\n    ref: inputTIN,\n    onSubmitEditing: function onSubmitEditing() {\n      return onSubmit();\n    },\n    onBlur: function onBlur() {\n      return _onBlur(\"tin\");\n    },\n    invalidText: invalids.tin && invalids.tin[0],\n    value: data.tin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }))), React.createElement(StackButtonView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, React.createElement(ContainedButton, {\n    disabled: isSubmitting,\n    label: \"NEXT\",\n    loading: isSubmitting,\n    onPress: function onPress() {\n      return onSubmit();\n    },\n    buttonStyle: {\n      backgroundColor: \"#309fe7\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })));\n};\nLinkAccount.propTypes = {\n  data: PropTypes.object,\n  invalids: PropTypes.object,\n  isSubmitting: PropTypes.bool,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func\n};\nexport default LinkAccount;\nvar styles = StyleSheet.create({\n  formHeaderView: {\n    marginBottom: 37,\n    width: \"80%\",\n    maxWidth: 300\n  }\n});","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/screens/LinkAccount/LinkAccount.js"],"names":["React","useRef","PropTypes","ContainedButton","Input","KeyboardShift","Title","Description","PNDatePicker","FormContentView","FormHeaderView","FormScrollView","StackButtonView","LinkAccount","props","data","invalids","isSubmitting","onBlur","onChange","onSubmit","inputAccountNumber","inputFirstname","inputLastname","inputMiddlename","inputTIN","styles","formHeaderView","value","current","focus","accountNumber","firstName","middleName","lastName","birthDate","date","Date","tin","backgroundColor","propTypes","object","bool","func","StyleSheet","create","marginBottom","width","maxWidth"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet } from \"react-native\";\n\n// Custom Components Here\nimport {\n  ContainedButton,\n  Input,\n  KeyboardShift,\n  Title,\n  Description,\n} from \"../../components\";\nimport PNDatePicker from \"../../library/components/PNDatePicker\"\nimport {\n  FormContentView,\n  FormHeaderView,\n  FormScrollView,\n  StackButtonView,\n} from \"../../layouts\";\n\nexport const LinkAccount = (props) => {\n  const { data, invalids, isSubmitting, onBlur, onChange, onSubmit } = props;\n\n  const inputAccountNumber = useRef();\n  const inputFirstname = useRef();\n  const inputLastname = useRef();\n  const inputMiddlename = useRef();\n  const inputTIN = useRef();\n\n  return (\n    <KeyboardShift>\n      <FormScrollView>\n        <FormHeaderView style={styles.formHeaderView}>\n          <Title>Link My Account</Title>\n          <Description>\n            Please fill in the required fields to link your account.\n          </Description>\n        </FormHeaderView>\n        <FormContentView>\n          <Input\n            label=\"Acccount Number\"\n            onChangeText={(value) => {\n              onChange(\"accountNumber\", value);\n            }}\n            ref={inputAccountNumber}\n            onSubmitEditing={() => inputFirstname.current.focus()}\n            onBlur={() => onBlur(\"accountNumber\")}\n            invalidText={invalids.accountNumber && invalids.accountNumber[0]}\n            value={data.accountNumber}\n          />\n          <Input\n            autoCompleteType=\"name\"\n            label=\"First Name\"\n            onChangeText={(value) => {\n              onChange(\"firstName\", value);\n            }}\n            ref={inputFirstname}\n            onSubmitEditing={() => inputMiddlename.current.focus()}\n            onBlur={() => onBlur(\"firstName\")}\n            invalidText={invalids.firstName && invalids.firstName[0]}\n            value={data.firstName}\n          />\n          <Input\n            autoCompleteType=\"name\"\n            label=\"Middle Name\"\n            onChangeText={(value) => {\n              onChange(\"middleName\", value);\n            }}\n            ref={inputMiddlename}\n            onSubmitEditing={() => inputLastname.current.focus()}\n            onBlur={() => onBlur(\"middleName\")}\n            invalidText={invalids.middleName && invalids.middleName[0]}\n            value={data.middleName}\n          />\n          <Input\n            autoCompleteType=\"name\"\n            label=\"Last Name\"\n            onChangeText={(value) => {\n              onChange(\"lastName\", value);\n            }}\n            ref={inputLastname}\n            onBlur={() => onBlur(\"lastName\")}\n            invalidText={invalids.lastName && invalids.lastName[0]}\n            value={data.lastName}\n          />\n          <PNDatePicker\n            title=\"Date of Birth\"\n            placeHolderText=\"Select Date of Birth\"\n            defaultDate={data.birthDate}\n            onDateChange={(date) => onChange(\"birthDate\", date)}\n            maximumDate={new Date()}\n          />\n  \n          <Input\n            label=\"TIN\"\n            onChangeText={(value) => {\n              onChange(\"tin\", value);\n            }}\n            ref={inputTIN}\n            onSubmitEditing={() => onSubmit()}\n            onBlur={() => onBlur(\"tin\")}\n            invalidText={invalids.tin && invalids.tin[0]}\n            value={data.tin}\n          />\n        </FormContentView>\n      </FormScrollView>\n      <StackButtonView>\n        <ContainedButton\n          disabled={isSubmitting}\n          label=\"NEXT\"\n          loading={isSubmitting}\n          onPress={() => onSubmit()}\n          buttonStyle={{ backgroundColor: \"#309fe7\" }}\n        />\n      </StackButtonView>\n    </KeyboardShift>\n  );\n};\n\nLinkAccount.propTypes = {\n  data: PropTypes.object,\n  invalids: PropTypes.object,\n  isSubmitting: PropTypes.bool,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nexport default LinkAccount;\n\nconst styles = StyleSheet.create({\n  formHeaderView: {\n    marginBottom: 37,\n    width: \"80%\",\n    maxWidth: 300,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/screens/OTP/OTPChangeMobileNumber.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { connect } from \"react-redux\";\nimport { ModifiedOTP } from \"./ModifiedOTP\";\nimport { OTP, profile } from \"../../API\";\nexport var OTPChangeMobileNumber = function OTPChangeMobileNumber(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoadingState = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loadingText = _useState4[0],\n      setLoadingText = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      token = _useState6[0],\n      setToken = _useState6[1];\n\n  var auth = props.auth,\n      navigation = props.navigation,\n      params = props.route.params;\n  useEffect(function () {\n    if (!params.formData) {\n      Alert.alert(\"Failed\", \"You need to fill-up the Edit Mobile Number form first.\", [{\n        text: \"Ok\",\n        onPress: handleBack\n      }]);\n    } else {\n      handleRequestOTP();\n    }\n  }, [params == null ? void 0 : params.formData]);\n\n  var handleRequestOTP = function handleRequestOTP() {\n    var _params$formData, _params$formData2;\n\n    OTP.request({\n      mobileNumber: params == null ? void 0 : (_params$formData = params.formData) == null ? void 0 : _params$formData.phoneNumber\n    }, {\n      mobileNumber: params == null ? void 0 : (_params$formData2 = params.formData) == null ? void 0 : _params$formData2.phoneNumber\n    }).then(function (_ref) {\n      var _ref$data = _ref.data,\n          message = _ref$data.msg,\n          status = _ref$data.status,\n          token = _ref$data.token;\n\n      if (token) {\n        setToken(token);\n        return true;\n      }\n\n      Alert.alert(\"Invalid Phone Number\", message, [{\n        text: \"Retry\",\n        onPress: function onPress() {\n          return handleRequestOTP();\n        }\n      }, {\n        text: \"Cancel\",\n        onPress: handleBack,\n        style: \"cancel\"\n      }]);\n    }).catch(function (error) {\n      Alert.alert(\"Server Error\", \"Ooops! There's something wrong connecting to the server. Please try again.\");\n    });\n    return false;\n  };\n\n  var handleBack = function handleBack() {\n    navigation.navigate(\"ChangeMobileNumber\", {\n      formData: params == null ? void 0 : params.formData\n    });\n  };\n\n  var handleSaveMobileNumber = function handleSaveMobileNumber() {\n    var _params$formData3;\n\n    setLoadingState(true);\n    setLoadingText(\"Updating Mobile Number\");\n    profile.addAttribute({\n      accessToken: auth.accessToken,\n      attributeName: \"phoneNumber\",\n      attributeValue: params == null ? void 0 : (_params$formData3 = params.formData) == null ? void 0 : _params$formData3.phoneNumber\n    }).then(function (_ref2) {\n      var _ref2$data = _ref2.data,\n          success = _ref2$data.success,\n          message = _ref2$data.message;\n\n      if (success) {\n        Alert.alert(\"Change Mobile Number\", \"Mobile Number was successfully changed.\", [{\n          text: \"Ok\",\n          onPress: function onPress() {\n            return navigation.navigate(\"ViewProfile\", {\n              reload: true\n            });\n          }\n        }]);\n      } else {\n        Alert.alert(\"Change Mobile Number\", \"Failed while changing mobile number\", [{\n          text: \"Retry\",\n          onPress: function onPress() {\n            return handleSaveMobileNumber();\n          }\n        }, {\n          text: \"Cancel\",\n          onPress: handleBack,\n          style: \"cancel\"\n        }]);\n      }\n    }).catch(function (error) {\n      Alert.alert(\"Server Error\", \"Ooops! There's something wrong connecting to the server. Please try again.\");\n    }).finally(function () {\n      return setLoadingState(false);\n    });\n  };\n\n  var handleDone = function handleDone(code) {\n    setLoadingState(true);\n    setLoadingText(\"Verifying OTP Code\");\n    OTP.verify(code, token).then(function (_ref3) {\n      var data = _ref3.data.data;\n      var message = data.message,\n          status = data.status;\n\n      if (status === \"ok\") {\n        handleSaveMobileNumber();\n      } else {\n        Alert.alert(\"Mismatch Token and Code\", \"The OTP you entered is invalid. Please try again.\");\n      }\n    }).catch(function (error) {\n      Alert.alert(\"Server Error\", \"Ooops! There's something wrong connecting to the server. Please try again.\");\n    }).finally(function () {\n      return setLoadingState(false);\n    });\n  };\n\n  return React.createElement(ModifiedOTP, {\n    onDone: handleDone,\n    isLoading: isLoading,\n    loadingText: loadingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  });\n};\nOTPChangeMobileNumber.propTypes = {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OTPChangeMobileNumber);","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/screens/OTP/OTPChangeMobileNumber.js"],"names":["React","useEffect","useState","PropTypes","connect","ModifiedOTP","OTP","profile","OTPChangeMobileNumber","props","isLoading","setLoadingState","loadingText","setLoadingText","token","setToken","auth","navigation","params","route","formData","Alert","alert","text","onPress","handleBack","handleRequestOTP","request","mobileNumber","phoneNumber","then","data","message","msg","status","style","catch","error","navigate","handleSaveMobileNumber","addAttribute","accessToken","attributeName","attributeValue","success","reload","finally","handleDone","code","verify","propTypes","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Alert } from \"react-native\";\nimport { connect } from \"react-redux\";\n\n// Custom Component Here\nimport { ModifiedOTP } from \"./ModifiedOTP\";\n\n// Others\nimport { OTP, profile } from \"../../API\";\n\nexport const OTPChangeMobileNumber = (props) => {\n  const [isLoading, setLoadingState] = useState(false);\n  const [loadingText, setLoadingText] = useState(\"\");\n  const [token, setToken] = useState(null);\n  const {\n    auth,\n    navigation,\n    route: { params },\n  } = props;\n\n  useEffect(() => {\n    if (!params.formData) {\n      Alert.alert(\n        \"Failed\",\n        \"You need to fill-up the Edit Mobile Number form first.\",\n        [\n          {\n            text: \"Ok\",\n            onPress: handleBack,\n          },\n        ]\n      );\n    } else {\n      handleRequestOTP();\n    }\n  }, [params?.formData]);\n\n  // useEffect(() => {\n  //   navigation.addListener(\"beforeRemove\", (e) => {\n  //     e.preventDefault();\n  //     handleBack();\n  //   });\n  // }, [navigation, params?.formData]);\n\n  const handleRequestOTP = () => {\n    OTP.request(\n      {\n        mobileNumber: params?.formData?.phoneNumber,\n      },\n      {\n        mobileNumber: params?.formData?.phoneNumber,\n      }\n    )\n      .then(({ data: { msg: message, status, token } }) => {\n        if (token) {\n          setToken(token);\n          return true;\n        }\n\n        Alert.alert(\"Invalid Phone Number\", message, [\n          {\n            text: \"Retry\",\n            onPress: () => handleRequestOTP(),\n          },\n          {\n            text: \"Cancel\",\n            onPress: handleBack,\n            style: \"cancel\",\n          },\n        ]);\n      })\n      .catch((error) => {\n        Alert.alert(\n          \"Server Error\",\n          \"Ooops! There's something wrong connecting to the server. Please try again.\"\n        );\n      });\n\n    return false;\n  };\n\n  const handleBack = () => {\n    navigation.navigate(\"ChangeMobileNumber\", {\n      formData: params?.formData,\n    });\n  };\n\n  const handleSaveMobileNumber = () => {\n    setLoadingState(true);\n    setLoadingText(\"Updating Mobile Number\")\n    profile.addAttribute({\n      accessToken: auth.accessToken,\n      attributeName: \"phoneNumber\",\n      attributeValue: params?.formData?.phoneNumber\n    })\n      .then(({ data: { success, message } }) => {\n        if(success) {\n          Alert.alert(\n            \"Change Mobile Number\",\n            \"Mobile Number was successfully changed.\",\n            [\n              {\n                text: \"Ok\",\n                onPress: () => navigation.navigate(\"ViewProfile\", { reload: true }),\n              },\n            ]\n          );\n        } else {\n          Alert.alert(\n            \"Change Mobile Number\",\n            \"Failed while changing mobile number\",\n            [\n              {\n                text: \"Retry\",\n                onPress: () => handleSaveMobileNumber(),\n              },\n              {\n                text: \"Cancel\",\n                onPress: handleBack,\n                style: \"cancel\",\n              },\n            ]\n          );\n        }\n      })\n      .catch((error) => {\n        Alert.alert(\n          \"Server Error\",\n          \"Ooops! There's something wrong connecting to the server. Please try again.\"\n        );\n      })\n      .finally(() => setLoadingState(false))\n  }\n\n  const handleDone = (code) => {\n    setLoadingState(true);\n    setLoadingText(\"Verifying OTP Code\")\n    OTP.verify(code, token)\n      .then(({ data: { data } }) => {\n        const { message, status } = data;\n        if (status === \"ok\") {\n          handleSaveMobileNumber();\n        } else {\n          Alert.alert(\n            \"Mismatch Token and Code\",\n            \"The OTP you entered is invalid. Please try again.\"\n          );\n        }\n      })\n      .catch((error) => {\n        Alert.alert(\n          \"Server Error\",\n          \"Ooops! There's something wrong connecting to the server. Please try again.\"\n        );\n      })\n      .finally(() => setLoadingState(false));\n  };\n\n  return (\n    <ModifiedOTP onDone={handleDone} isLoading={isLoading} loadingText={loadingText} />\n  );\n};\n\nOTPChangeMobileNumber.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OTPChangeMobileNumber);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/screens/ChangeMobileNumber/ChangeMobileNumberContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport validate from \"validate.js\";\nimport { ChangeMobileNumber } from \"./ChangeMobileNumber\";\nimport { config } from \"./config\";\nexport var ChangeMobileNumberContainer = function ChangeMobileNumberContainer(props) {\n  var _useState = useState({\n    phoneNumber: \"\",\n    phoneCode: \"+63\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      invalids = _useState4[0],\n      setInvalids = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSubmitting = _useState6[0],\n      setSubmittingStatus = _useState6[1];\n\n  var navigation = props.navigation,\n      params = props.route.params;\n  useEffect(function () {\n    if (params == null ? void 0 : params.formData) {\n      setFormData(function (currentState) {\n        return _objectSpread(_objectSpread({}, currentState), params == null ? void 0 : params.formData);\n      });\n    }\n  }, [params == null ? void 0 : params.formData]);\n\n  var handleBlur = function handleBlur(index) {\n    var additionalValidation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!config.validate) {\n      return true;\n    }\n\n    var newInvalids = {};\n\n    if (__DEV__) {\n      if (formData[index] === undefined) {\n        console.warn(\"'\" + index + \"' index is not found in [formData] state.\");\n      }\n\n      if (!config.constraints[index]) {\n        console.warn(\"There are no Validation Constraints for '\" + index + \"' form data index.\");\n      }\n    }\n\n    var toBeValidated = _objectSpread(_objectSpread({}, additionalValidation), {}, _defineProperty({}, index, formData[index]));\n\n    var invalid = handleValidate(toBeValidated, _defineProperty({}, index, config.constraints[index]));\n\n    if (!invalid) {\n      newInvalids = _objectSpread({}, invalids);\n      delete newInvalids[index];\n    } else {\n      newInvalids = _objectSpread(_objectSpread({}, invalids), invalid);\n    }\n\n    setInvalids(newInvalids);\n    return newInvalids;\n  };\n\n  var handleChange = function handleChange(index, value) {\n    setFormData(function (currentState) {\n      return _objectSpread(_objectSpread({}, currentState), {}, _defineProperty({}, index, value));\n    });\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var invalid = handleValidate(formData, config.constraints);\n\n    if (invalid) {\n      setInvalids(invalid);\n    } else {\n      navigation.navigate(\"OTPChangeMobileNumber\", {\n        formData: formData\n      });\n    }\n  };\n\n  var handleValidate = function handleValidate() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var constraints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!config.validate) {\n      return false;\n    }\n\n    var invalid = validate(data, constraints);\n    return invalid;\n  };\n\n  return React.createElement(ChangeMobileNumber, {\n    data: formData,\n    invalids: invalids,\n    isSubmitting: isSubmitting,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  });\n};\nChangeMobileNumberContainer.propTypes = {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return function () {\n    return {};\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeMobileNumberContainer);","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/screens/ChangeMobileNumber/ChangeMobileNumberContainer.js"],"names":["React","useEffect","useState","PropTypes","connect","validate","ChangeMobileNumber","config","ChangeMobileNumberContainer","props","phoneNumber","phoneCode","formData","setFormData","invalids","setInvalids","isSubmitting","setSubmittingStatus","navigation","params","route","currentState","handleBlur","index","additionalValidation","newInvalids","__DEV__","undefined","console","warn","constraints","toBeValidated","invalid","handleValidate","handleChange","value","handleSubmit","navigate","data","propTypes","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport validate from \"validate.js\";\n\n// Form Component\nimport { ChangeMobileNumber } from \"./ChangeMobileNumber\";\n\n// Others\nimport { config } from \"./config\";\n\nexport const ChangeMobileNumberContainer = (props) => {\n  const [formData, setFormData] = useState({\n    phoneNumber: \"\",\n    phoneCode: \"+63\"\n  });\n  const [invalids, setInvalids] = useState({});\n  const [isSubmitting, setSubmittingStatus] = useState(false);\n  const { navigation, route: { params } } = props;\n\n  useEffect(() => {\n    if (params?.formData) {\n      setFormData((currentState) => ({\n        ...currentState,\n        ...params?.formData,\n      }));\n    }\n  }, [params?.formData]);\n\n  /**\n   * Handle Blur Event Listener\n   * @description Used for validating inputs when onBlur event is triggered\n   * @param {String} index formData index\n   * @param {Object} additionalValidation Additional data for validation (used for Equality Validation)\n   */\n  const handleBlur = (index, additionalValidation = {}) => {\n    if(!config.validate) {\n      return true;\n    }\n\n    let newInvalids = {};\n\n    if (__DEV__) {\n      // Warn the user if the given index doesn't exist in [formData] state\n      if (formData[index] === undefined) {\n        console.warn(`'${index}' index is not found in [formData] state.`);\n      }\n\n      // Warn the user if there's no Validation Constraints to the specified index\n      if (!config.constraints[index]) {\n        console.warn(\n          `There are no Validation Constraints for '${index}' form data index.`\n        );\n      }\n    }\n\n    const toBeValidated = {\n      ...additionalValidation,\n      [index]: formData[index],\n    };\n\n    const invalid = handleValidate(toBeValidated, {\n      [index]: config.constraints[index],\n    });\n\n    if (!invalid) {\n      // Remove the specified index from [invalids] state\n      newInvalids = { ...invalids };\n      delete newInvalids[index];\n    } else {\n      // Add [invalid] to [invalids] state\n      newInvalids = {\n        ...invalids,\n        ...invalid,\n      };\n    }\n\n    // Set new Invalids as [invalids] state\n    setInvalids(newInvalids);\n\n    // Return New Invalids\n    return newInvalids;\n  };\n\n  const handleChange = (index, value) => {\n    setFormData((currentState) => ({\n      ...currentState,\n      [index]: value,\n    }));\n  };\n\n  const handleSubmit = () => {\n    // Validate\n    const invalid = handleValidate(formData, config.constraints);\n    if(invalid) {\n      setInvalids(invalid)\n    } else {  \n      navigation.navigate(\"OTPChangeMobileNumber\", {\n        formData\n      });\n    }\n  };\n\n  const handleValidate = (data = {}, constraints = {}) => {\n    if(!config.validate) {\n      return false;\n    }\n    \n    const invalid = validate(data, constraints);\n    // Do additional invalid data processing here\n    return invalid;\n  };\n\n  return (\n    <ChangeMobileNumber\n      data={formData}\n      invalids={invalids}\n      isSubmitting={isSubmitting}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      onSubmit={handleSubmit}\n    />\n  );\n};\n\nChangeMobileNumberContainer.propTypes = {};\n\nconst mapStateToProps = (state) => () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChangeMobileNumberContainer);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_IDTYPE_ERROR, FETCH_IDTYPE_SUCCESS } from \"../../actions/types\";\nvar initialState = {\n  data: {},\n  listsById: []\n};\nexport var idTypesReducer = function idTypesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_IDTYPE_ERROR:\n      return state;\n\n    case FETCH_IDTYPE_SUCCESS:\n      return {\n        data: _objectSpread(_objectSpread({}, state.data), action.payload.data),\n        listsById: [].concat(_toConsumableArray(state.listsById), _toConsumableArray(action.payload.listsById))\n      };\n\n    default:\n      return state;\n  }\n};\nexport default idTypesReducer;","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/reducers/ListReducer/idTypesReducer.js"],"names":["FETCH_IDTYPE_ERROR","FETCH_IDTYPE_SUCCESS","initialState","data","listsById","idTypesReducer","state","action","type","payload"],"mappings":";;;;;;;AAAA,SAASA,kBAAT,EAA6BC,oBAA7B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;AAKA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,kBAAL;AACE,aAAOM,KAAP;;AAEF,SAAKL,oBAAL;AACE,aAAO;AACLE,QAAAA,IAAI,kCACCG,KAAK,CAACH,IADP,GAECI,MAAM,CAACE,OAAP,CAAeN,IAFhB,CADC;AAKLC,QAAAA,SAAS,+BACJE,KAAK,CAACF,SADF,sBAEJG,MAAM,CAACE,OAAP,CAAeL,SAFX;AALJ,OAAP;;AAWF;AACE,aAAOE,KAAP;AAjBJ;AAmBD,CApBM;AAsBP,eAAeD,cAAf","sourcesContent":["import { FETCH_IDTYPE_ERROR, FETCH_IDTYPE_SUCCESS } from \"../../actions/types\";\n\nconst initialState = {\n  data: {},\n  listsById: []\n};\n\nexport const idTypesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_IDTYPE_ERROR:\n      return state;\n\n    case FETCH_IDTYPE_SUCCESS:\n      return {\n        data: {\n          ...state.data,\n          ...action.payload.data\n        },\n        listsById: [\n          ...state.listsById,\n          ...action.payload.listsById\n        ]\n      };\n  \n    default:\n      return state;\n  }\n}\n\nexport default idTypesReducer;"]},"metadata":{},"sourceType":"module"}
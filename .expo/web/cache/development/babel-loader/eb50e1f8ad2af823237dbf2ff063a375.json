{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/navigation/routes/TransferMoneyNavigation.js\";\nimport { DARK_BLUE, DIRTY_WHITE, LIGHT_BLUE, WHITE } from \"../../constants/colors\";\nimport { HeaderBackButton, createStackNavigator } from \"@react-navigation/stack\";\nimport { OtherBanksTransferForm, TransferMoneyOption } from \"../../screens/TransferMoney\";\nimport { SelectSourceAccount } from \"../../screens/SelectSourceAccount\";\nimport { ReviewTransfer } from \"../../screens/ReviewTransfer\";\nimport { SuccessTransferMoney } from \"../../screens/Common\";\nimport { DrawerActions } from \"@react-navigation/native\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { OTPTransferMoney } from \"screens/OTP\";\nimport React from \"react\";\nimport { headerOptions } from \"../HeaderOptions\";\nimport { icons } from \"../../res/images/icons\";\nvar Stack = createStackNavigator();\nexport var TransferMoneyNavigation = function TransferMoneyNavigation() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"TransferMoneyOption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"TransferMoneyOption\",\n    component: TransferMoneyOption,\n    options: function options(_ref) {\n      var navigation = _ref.navigation;\n      return headerOptions({\n        headerLeft: function headerLeft(props) {\n          return React.createElement(HeaderBackButton, _extends({}, props, {\n            backImage: function backImage() {\n              return React.createElement(Image, {\n                source: icons.ic_menu_blue,\n                style: {\n                  height: 20,\n                  width: 20\n                },\n                resizeMode: \"contain\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 21\n                }\n              });\n            },\n            onPress: function onPress() {\n              navigation.dispatch(DrawerActions.openDrawer());\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }\n          }));\n        },\n        title: \"Transfer Money\",\n        cardStyle: {\n          backgroundColor: DIRTY_WHITE\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"OtherBanksTransferForm\",\n    component: OtherBanksTransferForm,\n    options: function options(_ref2) {\n      var navigation = _ref2.navigation;\n      return headerOptions({\n        headerLeft: function headerLeft(props) {\n          return React.createElement(HeaderBackButton, _extends({}, props, {\n            backImage: function backImage() {\n              return React.createElement(Image, {\n                source: icons.ic_back_blue,\n                style: {\n                  height: 20,\n                  width: 20\n                },\n                resizeMode: \"contain\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }\n              });\n            },\n            canGoBack: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }\n          }));\n        },\n        title: \"Transfer Money\"\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SelectSourceAccount\",\n    component: SelectSourceAccount,\n    options: function options(_ref3) {\n      var navigation = _ref3.navigation;\n      return headerOptions({\n        headerLeft: function headerLeft(props) {\n          return React.createElement(HeaderBackButton, _extends({}, props, {\n            backImage: function backImage() {\n              return React.createElement(Image, {\n                source: icons.ic_back_blue,\n                style: {\n                  height: 20,\n                  width: 20\n                },\n                resizeMode: \"contain\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }\n              });\n            },\n            canGoBack: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }\n          }));\n        },\n        title: \"Select Source Account\",\n        cardStyle: {\n          backgroundColor: DIRTY_WHITE\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ReviewTransfer\",\n    component: ReviewTransfer,\n    options: function options(_ref4) {\n      var navigation = _ref4.navigation,\n          route = _ref4.route;\n      return headerOptions({\n        headerLeft: function headerLeft(props) {\n          return React.createElement(HeaderBackButton, _extends({}, props, {\n            backImage: function backImage() {\n              return React.createElement(Image, {\n                source: icons.ic_back_blue,\n                style: {\n                  height: 20,\n                  width: 20\n                },\n                resizeMode: \"contain\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }\n              });\n            },\n            onPress: function onPress() {\n              var _route$params, _route$params2;\n\n              if (((_route$params = route.params) == null ? void 0 : _route$params.previousRouteName) && ((_route$params2 = route.params) == null ? void 0 : _route$params2.transferMoneyData)) {\n                var _route$params3, _route$params4;\n\n                navigation.navigate((_route$params3 = route.params) == null ? void 0 : _route$params3.previousRouteName, {\n                  formData: (_route$params4 = route.params) == null ? void 0 : _route$params4.transferMoneyData\n                });\n              } else {\n                navigation.goBack();\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }\n          }));\n        },\n        title: \"Review and Transfer\",\n        cardStyle: {\n          backgroundColor: DIRTY_WHITE\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"OTPTransferMoney\",\n    component: OTPTransferMoney,\n    options: function options(_ref5) {\n      var navigation = _ref5.navigation,\n          route = _ref5.route;\n      return headerOptions({\n        headerLeft: function headerLeft(props) {\n          return React.createElement(HeaderBackButton, _extends({}, props, {\n            backImage: function backImage() {\n              return React.createElement(Image, {\n                source: icons.ic_back_white,\n                style: {\n                  height: 20,\n                  width: 20\n                },\n                resizeMode: \"contain\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 17\n                }\n              });\n            },\n            onPress: function onPress() {\n              var _route$params5;\n\n              if ((_route$params5 = route.params) == null ? void 0 : _route$params5.formData) {\n                var _route$params6;\n\n                navigation.navigate(\"ReviewTransfer\", {\n                  formData: (_route$params6 = route.params) == null ? void 0 : _route$params6.formData\n                });\n              } else {\n                navigation.navigate(\"TransferMoneyOption\");\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 13\n            }\n          }));\n        },\n        headerTitleColor: WHITE,\n        cardStyle: {\n          backgroundColor: LIGHT_BLUE\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SuccessTransferMoney\",\n    component: SuccessTransferMoney,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/navigation/routes/TransferMoneyNavigation.js"],"names":["DARK_BLUE","DIRTY_WHITE","LIGHT_BLUE","WHITE","HeaderBackButton","createStackNavigator","OtherBanksTransferForm","TransferMoneyOption","SelectSourceAccount","ReviewTransfer","SuccessTransferMoney","DrawerActions","OTPTransferMoney","React","headerOptions","icons","Stack","TransferMoneyNavigation","navigation","headerLeft","props","ic_menu_blue","height","width","dispatch","openDrawer","title","cardStyle","backgroundColor","ic_back_blue","route","params","previousRouteName","transferMoneyData","navigate","formData","goBack","ic_back_white","headerTitleColor","headerShown"],"mappings":"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","sourcesContent":["import {\n  DARK_BLUE,\n  DIRTY_WHITE,\n  LIGHT_BLUE,\n  WHITE,\n} from \"../../constants/colors\";\nimport {\n  HeaderBackButton,\n  createStackNavigator,\n} from \"@react-navigation/stack\";\nimport {\n  OtherBanksTransferForm,\n  // SunSavingsTransferForm,\n  TransferMoneyOption,\n} from \"../../screens/TransferMoney\";\nimport { SelectSourceAccount } from \"../../screens/SelectSourceAccount\"\nimport { ReviewTransfer } from \"../../screens/ReviewTransfer\"\nimport { SuccessTransferMoney } from \"../../screens/Common\"\n\nimport { DrawerActions } from \"@react-navigation/native\";\nimport { Image } from \"react-native\";\nimport { OTPTransferMoney } from \"screens/OTP\";\n/* eslint-disable react/display-name */\nimport React from \"react\";\nimport { headerOptions } from \"../HeaderOptions\";\nimport { icons } from \"../../res/images/icons\";\n\nconst Stack = createStackNavigator();\n\nexport const TransferMoneyNavigation = () => {\n  return (\n    <Stack.Navigator initialRouteName=\"TransferMoneyOption\">\n      <Stack.Screen\n        name=\"TransferMoneyOption\"\n        component={TransferMoneyOption}\n        options={({ navigation }) =>\n          headerOptions({\n            headerLeft: (props) => {\n              return (\n                <HeaderBackButton\n                  {...props}\n                  backImage={() => (\n                    <Image\n                      source={icons.ic_menu_blue}\n                      style={{ height: 20, width: 20 }}\n                      resizeMode=\"contain\"\n                    />\n                  )}\n                  onPress={() => {\n                    navigation.dispatch(DrawerActions.openDrawer());\n                  }}\n                />\n              );\n            },\n            title: \"Transfer Money\",\n            cardStyle: {\n              backgroundColor: DIRTY_WHITE,\n            },\n          })\n        }\n      />\n      {/* <Stack.Screen\n        name=\"SunSavingsTransferForm\"\n        component={SunSavingsTransferForm}\n        options={({ navigation }) =>\n          headerOptions({\n            headerLeft: (props) => {\n              return (\n                <HeaderBackButton\n                  {...props}\n                  backImage={() => (\n                    <Image\n                      source={icons.ic_back_blue}\n                      style={{ height: 20, width: 20 }}\n                      resizeMode=\"contain\"\n                    />\n                  )}\n                  canGoBack\n                />\n              );\n            },\n            title: \"Transfer Money\",\n          })\n        }\n      /> */}\n      <Stack.Screen\n        name=\"OtherBanksTransferForm\"\n        component={OtherBanksTransferForm}\n        options={({ navigation }) =>\n          headerOptions({\n            headerLeft: (props) => {\n              return (\n                <HeaderBackButton\n                  {...props}\n                  backImage={() => (\n                    <Image\n                      source={icons.ic_back_blue}\n                      style={{ height: 20, width: 20 }}\n                      resizeMode=\"contain\"\n                    />\n                  )}\n                  canGoBack\n                />\n              );\n            },\n            title: \"Transfer Money\",\n          })\n        }\n      />\n      <Stack.Screen\n        name=\"SelectSourceAccount\"\n        component={SelectSourceAccount}\n        options={({ navigation }) =>\n          headerOptions({\n            headerLeft: (props) => {\n              return (\n                <HeaderBackButton\n                  {...props}\n                  backImage={() => (\n                    <Image\n                      source={icons.ic_back_blue}\n                      style={{ height: 20, width: 20 }}\n                      resizeMode=\"contain\"\n                    />\n                  )}\n                  canGoBack\n                />\n              );\n            },\n            title: \"Select Source Account\",\n            cardStyle: {\n              backgroundColor: DIRTY_WHITE,\n            },\n          })\n        }\n      />\n      <Stack.Screen\n        name=\"ReviewTransfer\"\n        component={ReviewTransfer}\n        options={({ navigation, route }) =>\n          headerOptions({\n            headerLeft: (props) => {\n              return (\n                <HeaderBackButton\n                  {...props}\n                  backImage={() => (\n                    <Image\n                      source={icons.ic_back_blue}\n                      style={{ height: 20, width: 20 }}\n                      resizeMode=\"contain\"\n                    />\n                  )}\n                  onPress={() => {\n                    if(route.params?.previousRouteName && route.params?.transferMoneyData) {\n                      navigation.navigate(route.params?.previousRouteName, { formData: route.params?.transferMoneyData })\n                    } else {\n                      navigation.goBack();\n                    }\n                  }}\n                />\n              );\n            },\n            title: \"Review and Transfer\",\n            cardStyle: {\n              backgroundColor: DIRTY_WHITE,\n            },\n          })\n        }\n      />\n      <Stack.Screen\n        name=\"OTPTransferMoney\"\n        component={OTPTransferMoney}\n        options={({ navigation, route }) => headerOptions({\n          headerLeft: (props) => (\n            <HeaderBackButton\n              {...props}\n              backImage={() => (\n                <Image\n                  source={icons.ic_back_white}\n                  style={{ height: 20, width: 20 }}\n                  resizeMode=\"contain\"\n                />\n              )}\n              onPress={() => {\n                if(route.params?.formData) {\n                  navigation.navigate(\"ReviewTransfer\", { formData: route.params?.formData })\n                } else {\n                  navigation.navigate(\"TransferMoneyOption\")\n                }\n              }}\n            />\n          ),\n          headerTitleColor: WHITE,\n          cardStyle: {\n            backgroundColor: LIGHT_BLUE,\n          },\n        })}\n      />\n      <Stack.Screen\n        name=\"SuccessTransferMoney\"\n        component={SuccessTransferMoney}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
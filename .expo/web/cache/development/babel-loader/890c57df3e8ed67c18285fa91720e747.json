{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/components/Buttons/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport { DEFAULT_PRIMARY_COLOR } from \"../../constants/colors\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { styles } from \"./styles\";\nexport var Button = function Button(props) {\n  var buttonStyle = props.buttonStyle,\n      disabled = props.disabled,\n      disabledStyle = props.disabledStyle,\n      labelStyle = props.labelStyle,\n      label = props.label,\n      loading = props.loading,\n      otherProps = _objectWithoutProperties(props, [\"buttonStyle\", \"disabled\", \"disabledStyle\", \"labelStyle\", \"label\", \"loading\"]);\n\n  return React.createElement(TouchableOpacity, _extends({}, otherProps, {\n    disabled: disabled,\n    style: [styles.defaultButtonStyle, buttonStyle, disabled && disabledStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }), !loading ? React.createElement(Text, {\n    style: [styles.defaultLabelStyle, labelStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, label) : React.createElement(ActivityIndicator, {\n    color: \"#FFFFFF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }));\n};\nexport var ContainedButton = function ContainedButton(props) {\n  var buttonStyle = props.buttonStyle,\n      buttonProps = _objectWithoutProperties(props, [\"buttonStyle\"]);\n\n  return React.createElement(Button, _extends({}, buttonProps, {\n    buttonStyle: _objectSpread({\n      backgroundColor: DEFAULT_PRIMARY_COLOR\n    }, buttonStyle),\n    disabledStyle: styles.defaultDisabledStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }));\n};\nexport var OutlineButton = function OutlineButton(props) {\n  var buttonStyle = props.buttonStyle,\n      buttonProps = _objectWithoutProperties(props, [\"buttonStyle\"]);\n\n  return React.createElement(Button, _extends({}, buttonProps, {\n    buttonStyle: _objectSpread(_objectSpread({\n      borderColor: DEFAULT_PRIMARY_COLOR,\n      borderWidth: 2\n    }, buttonStyle), {}, {\n      backgroundColor: \"transparent\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }));\n};\nexport var TextButton = function TextButton(props) {\n  var buttonStyle = props.buttonStyle,\n      buttonProps = _objectWithoutProperties(props, [\"buttonStyle\"]);\n\n  return React.createElement(Button, _extends({}, buttonProps, {\n    buttonStyle: _objectSpread(_objectSpread({}, buttonStyle), {}, {\n      backgroundColor: \"transparent\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }));\n};\nexport default Button;\nButton.propTypes = {\n  buttonStyle: ViewPropTypes.style,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n  label: PropTypes.string,\n  labelStyle: PropTypes.object,\n  loading: PropTypes.bool,\n  onPress: PropTypes.func\n};\nContainedButton.propTypes = Button.propTypes;\nOutlineButton.propTypes = Button.propTypes;\nTextButton.propTypes = Button.propTypes;","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/components/Buttons/index.js"],"names":["DEFAULT_PRIMARY_COLOR","PropTypes","React","styles","Button","props","buttonStyle","disabled","disabledStyle","labelStyle","label","loading","otherProps","defaultButtonStyle","defaultLabelStyle","ContainedButton","buttonProps","backgroundColor","defaultDisabledStyle","OutlineButton","borderColor","borderWidth","TextButton","propTypes","ViewPropTypes","style","bool","string","object","onPress","func"],"mappings":"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","sourcesContent":["import { ActivityIndicator, Text, TouchableOpacity, ViewPropTypes } from \"react-native\";\n\nimport { DEFAULT_PRIMARY_COLOR } from \"../../constants/colors\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { styles } from \"./styles\";\n\nexport const Button = (props) => {\n  const {\n    buttonStyle,\n    disabled,\n    disabledStyle,\n    labelStyle,\n    label,\n    loading,\n    ...otherProps\n  } = props;\n  return (\n    <TouchableOpacity\n      {...otherProps}\n      disabled={disabled}\n      style={[\n        styles.defaultButtonStyle,\n        buttonStyle,\n        disabled && disabledStyle,\n      ]}\n    >\n      {!loading ? (\n        <Text style={[styles.defaultLabelStyle, labelStyle]}>{label}</Text>\n      ) : (\n        <ActivityIndicator color=\"#FFFFFF\" />\n      )}\n    </TouchableOpacity>\n  );\n};\n\nexport const ContainedButton = (props) => {\n  const {buttonStyle, ...buttonProps} = props;\n  return (\n    <Button\n      {...buttonProps}\n      buttonStyle={{ backgroundColor: DEFAULT_PRIMARY_COLOR, ...buttonStyle }}\n      disabledStyle={styles.defaultDisabledStyle}\n    />\n  );\n};\n\nexport const OutlineButton = (props) => {\n  const {buttonStyle, ...buttonProps} = props;\n  return (\n    <Button\n      {...buttonProps}\n      buttonStyle={{\n        borderColor: DEFAULT_PRIMARY_COLOR,\n        borderWidth: 2,\n        ...buttonStyle,\n        backgroundColor: \"transparent\",\n      }}\n    />\n  );\n};\n\nexport const TextButton = (props) => {\n  const {buttonStyle, ...buttonProps} = props;\n  return (\n    <Button\n      {...buttonProps}\n      buttonStyle={{\n        ...buttonStyle,\n        backgroundColor: \"transparent\",\n      }}\n    />\n  );\n};\n\nexport default Button;\n\n/**\n * Prop Types\n */\n\nButton.propTypes = {\n  buttonStyle: ViewPropTypes.style,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n  label: PropTypes.string,\n  labelStyle: PropTypes.object,\n  loading: PropTypes.bool,\n  onPress: PropTypes.func,\n};\n\nContainedButton.propTypes = Button.propTypes;\nOutlineButton.propTypes = Button.propTypes;\nTextButton.propTypes = Button.propTypes;"]},"metadata":{},"sourceType":"module"}
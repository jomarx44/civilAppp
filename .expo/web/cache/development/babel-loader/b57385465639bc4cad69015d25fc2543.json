{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CLEAR_LIST, FETCH_LIST, FETCH_LIST_ERROR, FETCH_LIST_SUCCESS } from \"../actions\";\nimport { list } from \"../../API\";\nexport var clearList = function clearList() {\n  var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return {\n    type: CLEAR_LIST,\n    payload: {\n      selectedIndex: index\n    }\n  };\n};\nexport var getList = function getList() {\n  return {\n    type: FETCH_LIST\n  };\n};\nexport var getListError = function getListError(index, error) {\n  return {\n    type: FETCH_LIST_ERROR,\n    error: error,\n    payload: {\n      selectedIndex: index\n    }\n  };\n};\nexport var getListSuccess = function getListSuccess(index, _ref) {\n  var list = _ref.list,\n      listByIds = _ref.listByIds;\n  return {\n    type: FETCH_LIST_SUCCESS,\n    payload: {\n      selectedIndex: index,\n      list: list,\n      listByIds: listByIds\n    }\n  };\n};\n\nvar reformatList = function reformatList(list) {\n  var formattedList = {\n    list: {},\n    listByIds: []\n  };\n  list.map(function (item) {\n    formattedList = {\n      list: _objectSpread(_objectSpread({}, formattedList.list), {}, _defineProperty({}, item.id_code, {\n        id: item.code,\n        value: item.id_code,\n        label: item.description\n      })),\n      listByIds: [].concat(_toConsumableArray(formattedList.listByIds), [item.id_code])\n    };\n  });\n  return formattedList;\n};\n\nexport var getBankAsync = function getBankAsync() {\n  return function (dispatch) {\n    return list.getBank().then(function (_ref2) {\n      var _ref2$data = _ref2.data,\n          data = _ref2$data.data,\n          message = _ref2$data.msg,\n          status = _ref2$data.status;\n      var _data$AccountInfo = data[\"Account.Info\"],\n          errorMessage = _data$AccountInfo.ErrorMsg,\n          returnCode = _data$AccountInfo.ReturnCode,\n          banks = _data$AccountInfo.banks;\n\n      if (returnCode == 0 && banks) {\n        if (banks.i instanceof Array) {\n          var formattedList = {\n            list: {},\n            listByIds: []\n          };\n          banks.i.map(function (bank) {\n            formattedList = {\n              list: _objectSpread(_objectSpread({}, formattedList.list), {}, _defineProperty({}, bank.code, {\n                id: bank.code,\n                value: bank.code,\n                label: bank.name\n              })),\n              listByIds: [].concat(_toConsumableArray(formattedList.listByIds), [bank.code])\n            };\n          });\n          dispatch(getListSuccess(\"bank\", formattedList));\n        }\n      }\n    }).catch(function (error) {\n      dispatch(getListError(\"bank\", error));\n    });\n  };\n};\nexport var getBarangayAsync = function getBarangayAsync(cityCode) {\n  return function (dispatch) {\n    return list.getBarangay(cityCode).then(function (_ref3) {\n      var _ref3$data = _ref3.data,\n          list = _ref3$data.data,\n          message = _ref3$data.msg,\n          status = _ref3$data.status;\n\n      if (status === \"ok\" && list) {\n        if (Array.isArray(list)) {\n          var formattedList = reformatList(list);\n          dispatch(getListSuccess(\"barangay\", formattedList));\n        }\n      }\n    }).catch(function (error) {\n      dispatch(getListError(\"barangay\", error));\n    });\n  };\n};\nexport var getCityAsync = function getCityAsync(citySearchValue) {\n  return function (dispatch) {\n    return list.getCity(citySearchValue).then(function (_ref4) {\n      var _ref4$data = _ref4.data,\n          list = _ref4$data.data,\n          message = _ref4$data.msg,\n          status = _ref4$data.status;\n\n      if (status === \"ok\" && list) {\n        if (Array.isArray(list)) {\n          var formattedList = reformatList(list);\n          dispatch(getListSuccess(\"city\", formattedList));\n        }\n      }\n    }).catch(function (error) {\n      dispatch(getListError(\"city\", error));\n    });\n  };\n};\nexport var getCivilStatusAsync = function getCivilStatusAsync() {\n  return function (dispatch) {\n    return list.getCivilStatus().then(function (_ref5) {\n      var _ref5$data = _ref5.data,\n          list = _ref5$data.data,\n          message = _ref5$data.msg,\n          status = _ref5$data.status;\n\n      if (status === \"ok\" && list) {\n        if (Array.isArray(list)) {\n          var formattedList = reformatList(list);\n          dispatch(getListSuccess(\"civilStatus\", formattedList));\n        }\n      }\n    }).catch(function (error) {\n      dispatch(getListError(\"civilStatus\", error));\n    });\n  };\n};\nexport var getHomeOwnershipAsync = function getHomeOwnershipAsync() {\n  return function (dispatch) {\n    dispatch(getList());\n    return list.getHomeOwnership().then(function (_ref6) {\n      var _ref6$data = _ref6.data,\n          list = _ref6$data.data,\n          message = _ref6$data.msg,\n          status = _ref6$data.status;\n\n      if (status === \"ok\" && list) {\n        if (Array.isArray(list)) {\n          var formattedList = reformatList(list);\n          dispatch(getListSuccess(\"homeOwnership\", formattedList));\n        }\n      }\n    }).catch(function (error) {\n      dispatch(getListError(\"homeOwnership\", error));\n    });\n  };\n};\nexport var getIdListAsync = function getIdListAsync() {\n  return function (dispatch) {\n    dispatch(getList());\n    return list.getIdList().then(function (_ref7) {\n      var _ref7$data = _ref7.data,\n          list = _ref7$data.data,\n          message = _ref7$data.msg,\n          status = _ref7$data.status;\n\n      if (status === \"ok\" && list) {\n        if (Array.isArray(list)) {\n          var formattedList = reformatList(list);\n          dispatch(getListSuccess(\"idList\", formattedList));\n        }\n      }\n    }).catch(function (error) {\n      dispatch(getListError(\"idList\", error));\n    });\n  };\n};\nexport var getJobTitleAsync = function getJobTitleAsync() {\n  return function (dispatch) {\n    dispatch(getList());\n    return list.getJobTitle().then(function (_ref8) {\n      var _ref8$data = _ref8.data,\n          list = _ref8$data.data,\n          message = _ref8$data.msg,\n          status = _ref8$data.status;\n\n      if (status === \"ok\" && list) {\n        if (Array.isArray(list)) {\n          var formattedList = reformatList(list);\n          dispatch(getListSuccess(\"jobTitle\", formattedList));\n        }\n      }\n    }).catch(function (error) {\n      dispatch(getListError(\"jobTitle\", error));\n    });\n  };\n};\nexport var getNationalityAsync = function getNationalityAsync() {\n  return function (dispatch) {\n    dispatch(getList());\n    return list.getNationality().then(function (_ref9) {\n      var _ref9$data = _ref9.data,\n          list = _ref9$data.data,\n          message = _ref9$data.msg,\n          status = _ref9$data.status;\n\n      if (status === \"ok\" && list) {\n        if (Array.isArray(list)) {\n          var formattedList = reformatList(list);\n          dispatch(getListSuccess(\"nationality\", formattedList));\n        }\n      }\n    }).catch(function (error) {\n      dispatch(getListError(\"jobTitle\", error));\n    });\n  };\n};\nexport var getSourceOfFundAsync = function getSourceOfFundAsync() {\n  return function (dispatch) {\n    dispatch(getList());\n    return list.getSourceOfFund().then(function (_ref10) {\n      var _ref10$data = _ref10.data,\n          list = _ref10$data.data,\n          message = _ref10$data.msg,\n          status = _ref10$data.status;\n\n      if (status === \"ok\" && list) {\n        if (Array.isArray(list)) {\n          var formattedList = reformatList(list);\n          dispatch(getListSuccess(\"sourceOfFund\", formattedList));\n        }\n      }\n    }).catch(function (error) {\n      dispatch(getListError(\"sourceOfFund\", error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/redux/list/actions.js"],"names":["CLEAR_LIST","FETCH_LIST","FETCH_LIST_ERROR","FETCH_LIST_SUCCESS","list","clearList","index","type","payload","selectedIndex","getList","getListError","error","getListSuccess","listByIds","reformatList","formattedList","map","item","id_code","id","code","value","label","description","getBankAsync","dispatch","getBank","then","data","message","msg","status","errorMessage","ErrorMsg","returnCode","ReturnCode","banks","i","Array","bank","name","catch","getBarangayAsync","cityCode","getBarangay","isArray","getCityAsync","citySearchValue","getCity","getCivilStatusAsync","getCivilStatus","getHomeOwnershipAsync","getHomeOwnership","getIdListAsync","getIdList","getJobTitleAsync","getJobTitle","getNationalityAsync","getNationality","getSourceOfFundAsync","getSourceOfFund"],"mappings":"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","sourcesContent":["import {\n  CLEAR_LIST,\n  FETCH_LIST,\n  FETCH_LIST_ERROR,\n  FETCH_LIST_SUCCESS,\n} from \"../actions\";\n\nimport { list } from \"../../API\";\n\n/***********************\n * ACTION CREATORS\n ***********************/\n\nexport const clearList = (index = null) => {\n  return {\n    type: CLEAR_LIST,\n    payload: {\n      selectedIndex: index,\n    },\n  };\n};\n\nexport const getList = () => {\n  return {\n    type: FETCH_LIST,\n  };\n};\n\nexport const getListError = (index, error) => {\n  return {\n    type: FETCH_LIST_ERROR,\n    error,\n    payload: {\n      selectedIndex: index\n    }\n  };\n};\n\nexport const getListSuccess = (index, {list, listByIds}) => {\n  return {\n    type: FETCH_LIST_SUCCESS,\n    payload: {\n      selectedIndex: index,\n      list,\n      listByIds,\n    },\n  };\n};\n\n/***********************\n * API WITH DISPATCH\n ***********************/\n\nconst reformatList = (list) => {\n  let formattedList = {\n    list: {},\n    listByIds: [],\n  };\n\n  list.map((item) => {\n    formattedList = {\n      list: {\n        ...formattedList.list,\n        [item.id_code]: {\n          id: item.code,\n          value: item.id_code,\n          label: item.description\n        },\n      },\n      listByIds: [...formattedList.listByIds, item.id_code],\n    };\n  });\n\n  return formattedList;\n};\n\nexport const getBankAsync = () => {\n  return (dispatch) => {\n    return list\n      .getBank()\n      .then(({ data: { data, msg: message, status } }) => {\n        const { ErrorMsg: errorMessage, ReturnCode: returnCode, banks} = data[\"Account.Info\"];\n        if (returnCode == 0 && banks) {\n          if (banks.i instanceof Array) {\n            let formattedList = {\n              list: {},\n              listByIds: [],\n            }\n            banks.i.map((bank) => {\n              formattedList = {\n                list: {\n                  ...formattedList.list,\n                  [bank.code]: {\n                    id: bank.code,\n                    value: bank.code,\n                    label: bank.name\n                  },\n                },\n                listByIds: [...formattedList.listByIds, bank.code],\n              };\n            });\n            dispatch(getListSuccess(\"bank\", formattedList));\n          }\n        } \n      })\n      .catch((error) => {\n        dispatch(getListError(\"bank\", error));\n      });\n  };\n};\n\nexport const getBarangayAsync = (cityCode) => {\n  return (dispatch) => {\n    return list\n      .getBarangay(cityCode)\n      .then(({ data: { data: list, msg: message, status } }) => {\n        if (status === \"ok\" && list) {\n          if (Array.isArray(list)) {\n            const formattedList = reformatList(list);\n            dispatch(getListSuccess(\"barangay\", formattedList));\n          }\n        }\n      })\n      .catch((error) => {\n        dispatch(getListError(\"barangay\", error));\n      });\n  };\n};\n\nexport const getCityAsync = (citySearchValue) => {\n  return (dispatch) => {\n    return list\n      .getCity(citySearchValue)\n      .then(({ data: { data: list, msg: message, status } }) => {\n        if (status === \"ok\" && list) {\n          if (Array.isArray(list)) {\n            const formattedList = reformatList(list);\n            dispatch(getListSuccess(\"city\", formattedList));\n          }\n        }\n      })\n      .catch((error) => {\n        dispatch(getListError(\"city\", error));\n      });\n  };\n};\n\nexport const getCivilStatusAsync = () => {\n  return (dispatch) => {\n    return list\n      .getCivilStatus()\n      .then(({ data: { data: list, msg: message, status } }) => {\n        if (status === \"ok\" && list) {\n          if (Array.isArray(list)) {\n            const formattedList = reformatList(list);\n            dispatch(getListSuccess(\"civilStatus\", formattedList));\n          }\n        }\n      })\n      .catch((error) => {\n        dispatch(getListError(\"civilStatus\", error));\n      });\n  };\n};\n\nexport const getHomeOwnershipAsync = () => {\n  return (dispatch) => {\n    dispatch(getList());\n    return list\n      .getHomeOwnership()\n      .then(({ data: { data: list, msg: message, status } }) => {\n        if (status === \"ok\" && list) {\n          if (Array.isArray(list)) {\n            const formattedList = reformatList(list);\n            dispatch(getListSuccess(\"homeOwnership\", formattedList));\n          }\n        }\n      })\n      .catch((error) => {\n        dispatch(getListError(\"homeOwnership\", error));\n      });\n  };\n};\n\nexport const getIdListAsync = () => {\n  return (dispatch) => {\n    dispatch(getList());\n    return list\n      .getIdList()\n      .then(({ data: { data: list, msg: message, status } }) => {\n        if (status === \"ok\" && list) {\n          if (Array.isArray(list)) {\n            const formattedList = reformatList(list);\n            dispatch(getListSuccess(\"idList\", formattedList));\n          }\n        }\n      })\n      .catch((error) => {\n        dispatch(getListError(\"idList\", error));\n      });\n  };\n};\n\nexport const getJobTitleAsync = () => {\n  return (dispatch) => {\n    dispatch(getList());\n    return list\n      .getJobTitle()\n      .then(({ data: { data: list, msg: message, status } }) => {\n        if (status === \"ok\" && list) {\n          if (Array.isArray(list)) {\n            const formattedList = reformatList(list);\n            dispatch(getListSuccess(\"jobTitle\", formattedList));\n          }\n        }\n      })\n      .catch((error) => {\n        dispatch(getListError(\"jobTitle\", error));\n      });\n  };\n};\n\nexport const getNationalityAsync = () => {\n  return (dispatch) => {\n    dispatch(getList());\n    return list\n      .getNationality()\n      .then(({ data: { data: list, msg: message, status } }) => {\n        if (status === \"ok\" && list) {\n          if (Array.isArray(list)) {\n            const formattedList = reformatList(list);\n            dispatch(getListSuccess(\"nationality\", formattedList));\n          }\n        }\n      })\n      .catch((error) => {\n        dispatch(getListError(\"jobTitle\", error));\n      });\n  };\n};\n\nexport const getSourceOfFundAsync = () => {\n  return (dispatch) => {\n    dispatch(getList());\n    return list\n      .getSourceOfFund()\n      .then(({ data: { data: list, msg: message, status } }) => {\n        if (status === \"ok\" && list) {\n          if (Array.isArray(list)) {\n            const formattedList = reformatList(list);\n            dispatch(getListSuccess(\"sourceOfFund\", formattedList));\n          }\n        }\n      })\n      .catch((error) => {\n        dispatch(getListError(\"sourceOfFund\", error));\n      });\n  };\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CLEAR_LIST, FETCH_LIST, FETCH_LIST_ERROR, FETCH_LIST_SUCCESS } from \"../actions\";\nvar initState = {\n  civilStatus: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  homeOwnership: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  idList: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  jobTitle: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  nationality: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  sourceOfFund: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  error: null,\n  status: {\n    isFetching: false\n  }\n};\nexport var list = function list() {\n  var _objectSpread3, _objectSpread4;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CLEAR_LIST:\n      if (action.payload.selectedIndex) {\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.payload.selectedIndex, initState[action.payload.selectedIndex]));\n      }\n\n      return _objectSpread(_objectSpread({}, initState), {}, {\n        error: state.error\n      });\n\n    case FETCH_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isFetching: true\n        })\n      });\n\n    case FETCH_LIST_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, action.payload.selectedIndex, _objectSpread(_objectSpread({}, state[action.payload.selectedIndex]), {}, {\n        error: action.error\n      })), _defineProperty(_objectSpread3, \"status\", _objectSpread(_objectSpread({}, state.status), {}, {\n        isFetching: false\n      })), _objectSpread3));\n\n    case FETCH_LIST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, action.payload.selectedIndex, _objectSpread(_objectSpread({}, state[action.payload.selectedIndex]), {}, {\n        list: action.payload.list,\n        listByIds: action.payload.listByIds\n      })), _defineProperty(_objectSpread4, \"status\", _objectSpread(_objectSpread({}, state.status), {}, {\n        isFetching: false\n      })), _objectSpread4));\n\n    default:\n      return state;\n  }\n};\nexport default list;","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/redux/list/reducer.js"],"names":["CLEAR_LIST","FETCH_LIST","FETCH_LIST_ERROR","FETCH_LIST_SUCCESS","initState","civilStatus","list","listByIds","error","homeOwnership","idList","jobTitle","nationality","sourceOfFund","status","isFetching","state","action","type","payload","selectedIndex"],"mappings":";;;;;;AAAA,SACEA,UADF,EAEEC,UAFF,EAGEC,gBAHF,EAIEC,kBAJF;AAOA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,EADK;AAEXC,IAAAA,SAAS,EAAE,EAFA;AAGXC,IAAAA,KAAK,EAAE;AAHI,GADG;AAMhBC,EAAAA,aAAa,EAAE;AACbH,IAAAA,IAAI,EAAE,EADO;AAEbC,IAAAA,SAAS,EAAE,EAFE;AAGbC,IAAAA,KAAK,EAAE;AAHM,GANC;AAWhBE,EAAAA,MAAM,EAAE;AACNJ,IAAAA,IAAI,EAAE,EADA;AAENC,IAAAA,SAAS,EAAE,EAFL;AAGNC,IAAAA,KAAK,EAAE;AAHD,GAXQ;AAgBhBG,EAAAA,QAAQ,EAAE;AACRL,IAAAA,IAAI,EAAE,EADE;AAERC,IAAAA,SAAS,EAAE,EAFH;AAGRC,IAAAA,KAAK,EAAE;AAHC,GAhBM;AAqBhBI,EAAAA,WAAW,EAAE;AACXN,IAAAA,IAAI,EAAE,EADK;AAEXC,IAAAA,SAAS,EAAE,EAFA;AAGXC,IAAAA,KAAK,EAAE;AAHI,GArBG;AA0BhBK,EAAAA,YAAY,EAAE;AACZP,IAAAA,IAAI,EAAE,EADM;AAEZC,IAAAA,SAAS,EAAE,EAFC;AAGZC,IAAAA,KAAK,EAAE;AAHK,GA1BE;AA+BhBA,EAAAA,KAAK,EAAE,IA/BS;AAgChBM,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE;AADN;AAhCQ,CAAlB;AAqCA,OAAO,IAAMT,IAAI,GAAG,SAAPA,IAAO,GAA+B;AAAA;;AAAA,MAA9BU,KAA8B,uEAAtBZ,SAAsB;AAAA,MAAXa,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,UAAL;AACE,UAAIiB,MAAM,CAACE,OAAP,CAAeC,aAAnB,EAAkC;AAChC,+CACKJ,KADL,2BAEGC,MAAM,CAACE,OAAP,CAAeC,aAFlB,EAGIhB,SAAS,CAACa,MAAM,CAACE,OAAP,CAAeC,aAAhB,CAHb;AAKD;;AAED,6CACKhB,SADL;AAEEI,QAAAA,KAAK,EAAEQ,KAAK,CAACR;AAFf;;AAIF,SAAKP,UAAL;AACE,6CACKe,KADL;AAEEF,QAAAA,MAAM,kCACDE,KAAK,CAACF,MADL;AAEJC,UAAAA,UAAU,EAAE;AAFR;AAFR;;AAOF,SAAKb,gBAAL;AACE,6CACKc,KADL,6DAEGC,MAAM,CAACE,OAAP,CAAeC,aAFlB,kCAGOJ,KAAK,CAACC,MAAM,CAACE,OAAP,CAAeC,aAAhB,CAHZ;AAIIZ,QAAAA,KAAK,EAAES,MAAM,CAACT;AAJlB,qFAOOQ,KAAK,CAACF,MAPb;AAQIC,QAAAA,UAAU,EAAE;AARhB;;AAWF,SAAKZ,kBAAL;AACE,6CACKa,KADL,6DAEGC,MAAM,CAACE,OAAP,CAAeC,aAFlB,kCAGOJ,KAAK,CAACC,MAAM,CAACE,OAAP,CAAeC,aAAhB,CAHZ;AAIId,QAAAA,IAAI,EAAEW,MAAM,CAACE,OAAP,CAAeb,IAJzB;AAKIC,QAAAA,SAAS,EAAEU,MAAM,CAACE,OAAP,CAAeZ;AAL9B,qFAQOS,KAAK,CAACF,MARb;AASIC,QAAAA,UAAU,EAAE;AAThB;;AAYF;AACE,aAAOC,KAAP;AAhDJ;AAkDD,CAnDM;AAqDP,eAAeV,IAAf","sourcesContent":["import {\n  CLEAR_LIST,\n  FETCH_LIST,\n  FETCH_LIST_ERROR,\n  FETCH_LIST_SUCCESS,\n} from \"../actions\";\n\nconst initState = {\n  civilStatus: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  homeOwnership: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  idList: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  jobTitle: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  nationality: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  sourceOfFund: {\n    list: {},\n    listByIds: [],\n    error: null\n  },\n  error: null,\n  status: {\n    isFetching: false,\n  },\n};\n\nexport const list = (state = initState, action) => {\n  switch (action.type) {\n    case CLEAR_LIST:\n      if (action.payload.selectedIndex) {\n        return {\n          ...state,\n          [action.payload.selectedIndex]:\n            initState[action.payload.selectedIndex],\n        };\n      }\n\n      return {\n        ...initState,\n        error: state.error,\n      };\n    case FETCH_LIST:\n      return {\n        ...state,\n        status: {\n          ...state.status,\n          isFetching: true,\n        },\n      };\n    case FETCH_LIST_ERROR:\n      return {\n        ...state,\n        [action.payload.selectedIndex]: {\n          ...state[action.payload.selectedIndex],\n          error: action.error\n        },\n        status: {\n          ...state.status,\n          isFetching: false,\n        },\n      };\n    case FETCH_LIST_SUCCESS:\n      return {\n        ...state,\n        [action.payload.selectedIndex]: {\n          ...state[action.payload.selectedIndex],\n          list: action.payload.list,\n          listByIds: action.payload.listByIds\n        },\n        status: {\n          ...state.status,\n          isFetching: false,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default list;\n"]},"metadata":{},"sourceType":"module"}
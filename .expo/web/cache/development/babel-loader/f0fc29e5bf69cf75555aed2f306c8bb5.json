{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/components/Input/components/Input.js\";\nimport React, { useRef, useState, forwardRef, useImperativeHandle } from \"react\";\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nexport var Input = forwardRef(function (props, ref) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isEmpty = _useState4[0],\n      setEmpty = _useState4[1];\n\n  var containerStyle = props.containerStyle,\n      inputContainerStyle = props.inputContainerStyle,\n      inputStyle = props.inputStyle,\n      labelStyle = props.labelStyle,\n      focusedContainerStyle = props.focusedContainerStyle,\n      focusedInputContainerStyle = props.focusedInputContainerStyle,\n      focusedInputStyle = props.focusedInputStyle,\n      focusedLabelStyle = props.focusedLabelStyle,\n      filledContainerStyle = props.filledContainerStyle,\n      filledInputContainerStyle = props.filledInputContainerStyle,\n      filledInputStyle = props.filledInputStyle,\n      filledLabelStyle = props.filledLabelStyle,\n      invalidStyle = props.invalidStyle,\n      label = props.label,\n      value = props.value,\n      invalidText = props.invalidText,\n      placeholderTextColor = props.placeholderTextColor,\n      _onFocus = props.onFocus,\n      _onBlur = props.onBlur,\n      _onChangeText = props.onChangeText,\n      inputProps = _objectWithoutProperties(props, [\"containerStyle\", \"inputContainerStyle\", \"inputStyle\", \"labelStyle\", \"focusedContainerStyle\", \"focusedInputContainerStyle\", \"focusedInputStyle\", \"focusedLabelStyle\", \"filledContainerStyle\", \"filledInputContainerStyle\", \"filledInputStyle\", \"filledLabelStyle\", \"invalidStyle\", \"label\", \"value\", \"invalidText\", \"placeholderTextColor\", \"onFocus\", \"onBlur\", \"onChangeText\"]);\n\n  var input = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        input.current.focus();\n      }\n    };\n  });\n\n  var handleFocus = function handleFocus() {\n    setFocused(true);\n  };\n\n  var handleBlur = function handleBlur() {\n    setFocused(false);\n  };\n\n  var handleChangeText = function handleChangeText(value) {\n    setEmpty(!value || value === \"\");\n  };\n\n  return React.createElement(View, {\n    style: [styles.container, containerStyle, !isEmpty && filledContainerStyle && filledContainerStyle, isFocused && focusedContainerStyle && focusedContainerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, label && React.createElement(Text, {\n    style: [styles.label, labelStyle, !isEmpty && filledLabelStyle && filledLabelStyle, isFocused && focusedLabelStyle && focusedLabelStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, label), React.createElement(View, {\n    style: [styles.inputContainer, inputContainerStyle, !isEmpty && filledInputContainerStyle && filledInputContainerStyle, isFocused && focusedInputContainerStyle && focusedInputContainerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, _extends({}, inputProps, {\n    onBlur: function onBlur() {\n      handleBlur();\n      _onBlur && _onBlur();\n    },\n    onChangeText: function onChangeText(value) {\n      handleChangeText(value);\n      _onChangeText && _onChangeText(value);\n    },\n    onFocus: function onFocus() {\n      handleFocus();\n      _onFocus && _onFocus();\n    },\n    placeholderTextColor: placeholderTextColor ? placeholderTextColor : constants.FONT_COLOR_DARKGRAY,\n    ref: input,\n    style: [{\n      color: constants.FONT_COLOR_ORANGE\n    }, styles.input, inputStyle, !isEmpty && filledInputStyle && filledInputStyle, isFocused && focusedInputStyle && focusedInputStyle],\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }))), invalidText && React.createElement(Text, {\n    style: [styles.invalid, invalidStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, invalidText));\n});\nInput.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  inputContainerStyle: ViewPropTypes.style,\n  inputStyle: Text.propTypes.style,\n  labelStyle: Text.propTypes.style,\n  focusedContainerStyle: ViewPropTypes.style,\n  focusedInputContainerStyle: ViewPropTypes.style,\n  focusedInputStyle: Text.propTypes.style,\n  focusedLabelStyle: Text.propTypes.style,\n  filledContainerStyle: ViewPropTypes.style,\n  filledInputContainerStyle: ViewPropTypes.style,\n  filledInputStyle: Text.propTypes.style,\n  filledLabelStyle: Text.propTypes.style,\n  invalidStyle: Text.propTypes.style,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  invalidText: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func\n};\nexport var constants = {\n  FONT_COLOR_ORANGE: \"#f9a010\",\n  FONT_COLOR_GRAY: \"#3e4a59\",\n  FONT_COLOR_DARKGRAY: \"#444444\",\n  FONT_COLOR_DARKBLUE: \"#003d6f\"\n};\nexport default Input;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"stretch\",\n    backgroundColor: \"#FFF\",\n    flexDirection: \"column\",\n    marginBottom: 20,\n    width: \"100%\"\n  },\n  label: {\n    backgroundColor: \"transparent\",\n    color: \"#5d646c\",\n    fontSize: 18,\n    fontFamily: \"Gilroy_Medium\",\n    marginBottom: 4\n  },\n  inputContainer: {\n    backgroundColor: \"transparent\",\n    borderBottomColor: \"#e1e1e5\",\n    borderBottomWidth: 1\n  },\n  input: {\n    backgroundColor: \"transparent\",\n    fontFamily: \"Gilroy_Medium\",\n    fontSize: 18,\n    height: 40,\n    paddingVertical: 6\n  },\n  invalid: {\n    marginTop: 5,\n    fontFamily: \"Avenir_Medium\",\n    fontSize: 12,\n    color: \"#DC6061\"\n  }\n});","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/components/Input/components/Input.js"],"names":["React","useRef","useState","forwardRef","useImperativeHandle","PropTypes","Input","props","ref","isFocused","setFocused","isEmpty","setEmpty","containerStyle","inputContainerStyle","inputStyle","labelStyle","focusedContainerStyle","focusedInputContainerStyle","focusedInputStyle","focusedLabelStyle","filledContainerStyle","filledInputContainerStyle","filledInputStyle","filledLabelStyle","invalidStyle","label","value","invalidText","placeholderTextColor","onFocus","onBlur","onChangeText","inputProps","input","focus","current","handleFocus","handleBlur","handleChangeText","styles","container","inputContainer","constants","FONT_COLOR_DARKGRAY","color","FONT_COLOR_ORANGE","invalid","propTypes","ViewPropTypes","style","Text","string","func","FONT_COLOR_GRAY","FONT_COLOR_DARKBLUE","StyleSheet","create","alignItems","backgroundColor","flexDirection","marginBottom","width","fontSize","fontFamily","borderBottomColor","borderBottomWidth","height","paddingVertical","marginTop"],"mappings":"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","sourcesContent":["/* eslint-disable react/display-name */\nimport React, {\n  useRef,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport PropTypes from 'prop-types'\nimport { StyleSheet, Text, View, TextInput, ViewPropTypes } from \"react-native\";\n\nexport const Input = forwardRef((props, ref) => {\n  const [isFocused, setFocused] = useState(false);\n  const [isEmpty, setEmpty] = useState(true);\n  const {\n    containerStyle,\n    inputContainerStyle,\n    inputStyle,\n    labelStyle,\n    focusedContainerStyle,\n    focusedInputContainerStyle,\n    focusedInputStyle,\n    focusedLabelStyle,\n    filledContainerStyle,\n    filledInputContainerStyle,\n    filledInputStyle,\n    filledLabelStyle,\n    invalidStyle,\n    label,\n    value,\n    invalidText,\n    placeholderTextColor,\n    onFocus,\n    onBlur,\n    onChangeText,\n    ...inputProps\n  } = props;\n  const input = useRef(null);\n\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      input.current.focus();\n    },\n  }));\n\n  const handleFocus = () => {\n    setFocused(true);\n  };\n\n  const handleBlur = () => {\n    setFocused(false);\n  };\n\n  const handleChangeText = (value) => {\n    setEmpty(!value || value === \"\");\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        containerStyle,\n        !isEmpty && filledContainerStyle && filledContainerStyle,\n        isFocused && focusedContainerStyle && focusedContainerStyle,\n      ]}\n    >\n      {label && (\n        <Text\n          style={[\n            styles.label,\n            labelStyle,\n            !isEmpty && filledLabelStyle && filledLabelStyle,\n            isFocused && focusedLabelStyle && focusedLabelStyle,\n          ]}\n        >\n          {label}\n        </Text>\n      )}\n      <View\n        style={[\n          styles.inputContainer,\n          inputContainerStyle,\n          !isEmpty && filledInputContainerStyle && filledInputContainerStyle,\n          isFocused && focusedInputContainerStyle && focusedInputContainerStyle,\n        ]}\n      >\n        <TextInput\n          {...inputProps}\n          onBlur={() => {\n            handleBlur();\n            onBlur && onBlur();\n          }}\n          onChangeText={(value) => {\n            handleChangeText(value);\n            onChangeText && onChangeText(value);\n          }}\n          onFocus={() => {\n            handleFocus();\n            onFocus && onFocus();\n          }}\n          placeholderTextColor={\n            placeholderTextColor\n              ? placeholderTextColor\n              : constants.FONT_COLOR_DARKGRAY\n          }\n          ref={input}\n          style={[\n            { color: constants.FONT_COLOR_ORANGE },\n            styles.input,\n            inputStyle,\n            !isEmpty && filledInputStyle && filledInputStyle,\n            isFocused && focusedInputStyle && focusedInputStyle,\n          ]}\n          value={value}\n        />\n      </View>\n      {invalidText && (\n        <Text style={[styles.invalid, invalidStyle]}>{invalidText}</Text>\n      )}\n    </View>\n  );\n});\n\nInput.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  inputContainerStyle: ViewPropTypes.style,\n  inputStyle: Text.propTypes.style,\n  labelStyle: Text.propTypes.style,\n  focusedContainerStyle: ViewPropTypes.style,\n  focusedInputContainerStyle: ViewPropTypes.style,\n  focusedInputStyle: Text.propTypes.style,\n  focusedLabelStyle: Text.propTypes.style,\n  filledContainerStyle: ViewPropTypes.style,\n  filledInputContainerStyle: ViewPropTypes.style,\n  filledInputStyle: Text.propTypes.style,\n  filledLabelStyle: Text.propTypes.style,\n  invalidStyle: Text.propTypes.style,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  invalidText: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func,\n}\n\nexport const constants = {\n  FONT_COLOR_ORANGE: \"#f9a010\",\n  FONT_COLOR_GRAY: \"#3e4a59\",\n  FONT_COLOR_DARKGRAY: \"#444444\",\n  FONT_COLOR_DARKBLUE: \"#003d6f\",\n};\n\nexport default Input;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"stretch\",\n    backgroundColor: \"#FFF\",\n    flexDirection: \"column\",\n    marginBottom: 20,\n    width: \"100%\",\n  },\n  label: {\n    backgroundColor: \"transparent\",\n    color: \"#5d646c\",\n    fontSize: 18,\n    fontFamily: \"Gilroy_Medium\",\n    marginBottom: 4,\n  },\n  inputContainer: {\n    backgroundColor: \"transparent\",\n    borderBottomColor: \"#e1e1e5\",\n    borderBottomWidth: 1,\n  },\n  input: {\n    backgroundColor: \"transparent\",\n    fontFamily: \"Gilroy_Medium\",\n    fontSize: 18,\n    height: 40,\n    paddingVertical: 6,\n  },\n  invalid: {\n    marginTop: 5,\n    fontFamily: \"Avenir_Medium\",\n    fontSize: 12,\n    color: \"#DC6061\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}
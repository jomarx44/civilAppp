{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { BANK_ACCOUNT_INITIALIZE_REDUCER, BANK_ACCOUNT_CREATE, BANK_ACCOUNT_CREATE_ERROR, BANK_ACCOUNT_CREATE_INITIALIZE, BANK_ACCOUNT_CREATE_SUCCESS, BANK_ACCOUNT_FETCH, BANK_ACCOUNT_FETCH_ERROR, BANK_ACCOUNT_FETCH_INITIALIZE, BANK_ACCOUNT_FETCH_SUCCESS, BANK_ACCOUNT_HISTORY_FETCH, BANK_ACCOUNT_HISTORY_FETCH_ERROR, BANK_ACCOUNT_HISTORY_FETCH_INITIALIZE, BANK_ACCOUNT_HISTORY_FETCH_SUCCESS } from \"../actions\";\nvar initState = {\n  list: {},\n  historyList: {},\n  listByIds: [],\n  formData: {},\n  status: {\n    isFetching: false,\n    isCreating: false\n  },\n  error: null\n};\nexport var bankAccount = function bankAccount() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case BANK_ACCOUNT_INITIALIZE_REDUCER:\n      return initState;\n\n    case BANK_ACCOUNT_CREATE_INITIALIZE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formData: initState.formData,\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isCreating: initState.status.isCreating\n        })\n      });\n\n    case BANK_ACCOUNT_CREATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formData: action.payload.account,\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isCreating: true\n        })\n      });\n\n    case BANK_ACCOUNT_CREATE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formData: initState.formData,\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isCreating: false\n        })\n      });\n\n    case BANK_ACCOUNT_CREATE_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isCreating: false\n        })\n      });\n\n    case BANK_ACCOUNT_FETCH_INITIALIZE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: initState.list,\n        listByIds: initState.listByIds,\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isFetching: initState.status.isFetching\n        })\n      });\n\n    case BANK_ACCOUNT_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: {},\n        listByIds: [],\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isFetching: true\n        })\n      });\n\n    case BANK_ACCOUNT_FETCH_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: action.payload.list,\n        listByIds: action.payload.listByIds,\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isFetching: false\n        })\n      });\n\n    case BANK_ACCOUNT_FETCH_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isFetching: false\n        })\n      });\n\n    case BANK_ACCOUNT_HISTORY_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: initState.error,\n        historyList: {},\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isFetching: true\n        })\n      });\n\n    case BANK_ACCOUNT_HISTORY_FETCH_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        historyList: _objectSpread(_objectSpread({}, state.historyList), action.payload.historyList),\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isFetching: false\n        })\n      });\n\n    case BANK_ACCOUNT_HISTORY_FETCH_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        status: _objectSpread(_objectSpread({}, state.status), {}, {\n          isFetching: false\n        })\n      });\n\n    default:\n      return state;\n  }\n};\nexport default bankAccount;","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/redux/bankAccount/reducer.js"],"names":["BANK_ACCOUNT_INITIALIZE_REDUCER","BANK_ACCOUNT_CREATE","BANK_ACCOUNT_CREATE_ERROR","BANK_ACCOUNT_CREATE_INITIALIZE","BANK_ACCOUNT_CREATE_SUCCESS","BANK_ACCOUNT_FETCH","BANK_ACCOUNT_FETCH_ERROR","BANK_ACCOUNT_FETCH_INITIALIZE","BANK_ACCOUNT_FETCH_SUCCESS","BANK_ACCOUNT_HISTORY_FETCH","BANK_ACCOUNT_HISTORY_FETCH_ERROR","BANK_ACCOUNT_HISTORY_FETCH_INITIALIZE","BANK_ACCOUNT_HISTORY_FETCH_SUCCESS","initState","list","historyList","listByIds","formData","status","isFetching","isCreating","error","bankAccount","state","action","type","payload","account"],"mappings":"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","sourcesContent":["import {\n  BANK_ACCOUNT_INITIALIZE_REDUCER,\n  BANK_ACCOUNT_CREATE,\n  BANK_ACCOUNT_CREATE_ERROR,\n  BANK_ACCOUNT_CREATE_INITIALIZE,\n  BANK_ACCOUNT_CREATE_SUCCESS,\n  BANK_ACCOUNT_FETCH,\n  BANK_ACCOUNT_FETCH_ERROR,\n  BANK_ACCOUNT_FETCH_INITIALIZE,\n  BANK_ACCOUNT_FETCH_SUCCESS,\n  BANK_ACCOUNT_HISTORY_FETCH,\n  BANK_ACCOUNT_HISTORY_FETCH_ERROR,\n  BANK_ACCOUNT_HISTORY_FETCH_INITIALIZE,\n  BANK_ACCOUNT_HISTORY_FETCH_SUCCESS,\n} from \"../actions\";\n\nconst initState = {\n  list: {},\n  historyList: {},\n  listByIds: [],\n  formData: {},\n  status: {\n    isFetching: false,\n    isCreating: false,\n  },\n  error: null,\n};\n\nexport const bankAccount = (state = initState, action) => {\n  switch (action.type) {\n    case BANK_ACCOUNT_INITIALIZE_REDUCER:\n      return initState;\n    case BANK_ACCOUNT_CREATE_INITIALIZE:\n      return {\n        ...state,\n        formData: initState.formData,\n        status: {\n          ...state.status,\n          isCreating: initState.status.isCreating,\n        },\n      };\n    case BANK_ACCOUNT_CREATE:\n      return {\n        ...state,\n        formData: action.payload.account,\n        status: {\n          ...state.status,\n          isCreating: true,\n        },\n      };\n    case BANK_ACCOUNT_CREATE_SUCCESS:\n      return {\n        ...state,\n        formData: initState.formData,\n        status: {\n          ...state.status,\n          isCreating: false,\n        },\n      };\n    case BANK_ACCOUNT_CREATE_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        status: {\n          ...state.status,\n          isCreating: false,\n        },\n      };\n    case BANK_ACCOUNT_FETCH_INITIALIZE:\n      return {\n        ...state,\n        list: initState.list,\n        listByIds: initState.listByIds,\n        status: {\n          ...state.status,\n          isFetching: initState.status.isFetching,\n        },\n      };\n    case BANK_ACCOUNT_FETCH:\n      return {\n        ...state,\n        list: {},\n        listByIds: [],\n        status: {\n          ...state.status,\n          isFetching: true,\n        },\n      };\n    case BANK_ACCOUNT_FETCH_SUCCESS:\n      return {\n        ...state,\n        list: action.payload.list,\n        listByIds: action.payload.listByIds,\n        status: {\n          ...state.status,\n          isFetching: false,\n        },\n      };\n    case BANK_ACCOUNT_FETCH_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        status: {\n          ...state.status,\n          isFetching: false,\n        },\n      };\n    case BANK_ACCOUNT_HISTORY_FETCH:\n      return {\n        ...state,\n        error: initState.error,\n        historyList: {},\n        status: {\n          ...state.status,\n          isFetching: true,\n        },\n      };\n    case BANK_ACCOUNT_HISTORY_FETCH_SUCCESS:\n      return {\n        ...state,\n        historyList: {\n          ...state.historyList,\n          ...action.payload.historyList\n        },\n        status: {\n          ...state.status,\n          isFetching: false,\n        },\n      };\n    case BANK_ACCOUNT_HISTORY_FETCH_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        status: {\n          ...state.status,\n          isFetching: false,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default bankAccount;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as TYPE from \"../actions/types\";\nexport var dispatcher = function dispatcher(_ref) {\n  var dispatch = _ref.dispatch,\n      action = _ref.action,\n      payload = _ref.payload;\n  dispatch({\n    type: action,\n    payload: payload\n  });\n};\nexport var optionsDispatch = function optionsDispatch(_ref2) {\n  var data = _ref2.data,\n      dispatch = _ref2.dispatch,\n      type = _ref2.type;\n\n  if (data.status == \"ok\" && data.data instanceof Array) {\n    var lists = data.data;\n    var payload = {\n      data: {},\n      listsById: []\n    };\n    lists.map(function (item) {\n      payload.data[item.id_code] = {\n        label: item.description,\n        value: item.id_code\n      };\n      payload.listsById.push(item.id_code);\n    });\n    dispatcher({\n      dispatch: dispatch,\n      action: TYPE[\"FETCH_\" + type + \"_SUCCESS\"],\n      payload: payload\n    });\n  } else {\n    dispatcher({\n      dispatch: dispatch,\n      action: TYPE[\"FETCH_\" + type + \"_ERROR\"]\n    });\n  }\n};\nexport var getFormattedDate = function getFormattedDate(date) {\n  var year = date.getFullYear();\n  var month = (1 + date.getMonth()).toString().padStart(2, \"0\");\n  var day = date.getDate().toString().padStart(2, \"0\");\n  return month + \"/\" + day + \"/\" + year;\n};\nexport var APIErrorLogging = function APIErrorLogging(caller, error) {};\nexport var toAmountWithTwoDecimals = function toAmountWithTwoDecimals(amount) {\n  amount = Math.abs(amount);\n  amount = amount.toFixed(2);\n  var str = amount.split(\".\");\n\n  if (str[0].length >= 4) {\n    str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\");\n  }\n\n  if (str[1] && str[1].length >= 4) {\n    str[1] = str[1].replace(/(\\d{3})/g, \"$1 \");\n  }\n\n  return str.join(\".\");\n};\nexport var MMMDDYYYYToDateString = function MMMDDYYYYToDateString() {\n  var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var indexOfLastWhiteSpace = date.lastIndexOf(\" \");\n  return date.substring(0, indexOfLastWhiteSpace);\n};\nexport var chunkSubstr = function chunkSubstr(str, size) {\n  var numChunks = Math.ceil(str.length / size);\n  var chunks = new Array(numChunks);\n\n  for (var i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substr(o, size);\n  }\n\n  return chunks;\n};","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/library/helpers.js"],"names":["TYPE","dispatcher","dispatch","action","payload","type","optionsDispatch","data","status","Array","lists","listsById","map","item","id_code","label","description","value","push","getFormattedDate","date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","APIErrorLogging","caller","error","toAmountWithTwoDecimals","amount","Math","abs","toFixed","str","split","length","replace","join","MMMDDYYYYToDateString","indexOfLastWhiteSpace","lastIndexOf","substring","chunkSubstr","size","numChunks","ceil","chunks","i","o","substr"],"mappings":"AAAA,OAAO,KAAKA,IAAZ;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAmC;AAAA,MAAhCC,QAAgC,QAAhCA,QAAgC;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC3DF,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAEF,MADC;AAEPC,IAAAA,OAAO,EAAPA;AAFO,GAAD,CAAR;AAID,CALM;AAOP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,QAA8B;AAAA,MAA3BC,IAA2B,SAA3BA,IAA2B;AAAA,MAArBL,QAAqB,SAArBA,QAAqB;AAAA,MAAXG,IAAW,SAAXA,IAAW;;AAC3D,MAAIE,IAAI,CAACC,MAAL,IAAe,IAAf,IAAuBD,IAAI,CAACA,IAAL,YAAqBE,KAAhD,EAAuD;AAAA,QACvCC,KADuC,GAC7BH,IAD6B,CAC7CA,IAD6C;AAErD,QAAIH,OAAO,GAAG;AACZG,MAAAA,IAAI,EAAE,EADM;AAEZI,MAAAA,SAAS,EAAE;AAFC,KAAd;AAKAD,IAAAA,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAU;AAClBT,MAAAA,OAAO,CAACG,IAAR,CAAaM,IAAI,CAACC,OAAlB,IAA6B;AAC3BC,QAAAA,KAAK,EAAEF,IAAI,CAACG,WADe;AAE3BC,QAAAA,KAAK,EAAEJ,IAAI,CAACC;AAFe,OAA7B;AAIAV,MAAAA,OAAO,CAACO,SAAR,CAAkBO,IAAlB,CAAuBL,IAAI,CAACC,OAA5B;AACD,KAND;AAQAb,IAAAA,UAAU,CAAC;AACTC,MAAAA,QAAQ,EAARA,QADS;AAETC,MAAAA,MAAM,EAAEH,IAAI,YAAUK,IAAV,cAFH;AAGTD,MAAAA,OAAO,EAAEA;AAHA,KAAD,CAAV;AAKD,GApBD,MAoBO;AACLH,IAAAA,UAAU,CAAC;AACTC,MAAAA,QAAQ,EAARA,QADS;AAETC,MAAAA,MAAM,EAAEH,IAAI,YAAUK,IAAV;AAFH,KAAD,CAAV;AAID;AACF,CA3BM;AA6BP,OAAO,IAAMc,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;AACxC,MAAIC,IAAI,GAAGD,IAAI,CAACE,WAAL,EAAX;AACA,MAAIC,KAAK,GAAG,CAAC,IAAIH,IAAI,CAACI,QAAL,EAAL,EAAsBC,QAAtB,GAAiCC,QAAjC,CAA0C,CAA1C,EAA6C,GAA7C,CAAZ;AACA,MAAIC,GAAG,GAAGP,IAAI,CAACQ,OAAL,GAAeH,QAAf,GAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAV;AAEA,SAAOH,KAAK,GAAG,GAAR,GAAcI,GAAd,GAAoB,GAApB,GAA0BN,IAAjC;AACD,CANM;AAQP,OAAO,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,KAAT,EAAmB,CAyBjD,CAzBM;AA2BP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,MAAD,EAAY;AACjDA,EAAAA,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASF,MAAT,CAAT;AACAA,EAAAA,MAAM,GAAGA,MAAM,CAACG,OAAP,CAAe,CAAf,CAAT;AAEA,MAAIC,GAAG,GAAGJ,MAAM,CAACK,KAAP,CAAa,GAAb,CAAV;;AACA,MAAID,GAAG,CAAC,CAAD,CAAH,CAAOE,MAAP,IAAiB,CAArB,EAAwB;AACtBF,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAOG,OAAP,CAAe,oBAAf,EAAqC,KAArC,CAAT;AACD;;AACD,MAAIH,GAAG,CAAC,CAAD,CAAH,IAAUA,GAAG,CAAC,CAAD,CAAH,CAAOE,MAAP,IAAiB,CAA/B,EAAkC;AAChCF,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAOG,OAAP,CAAe,UAAf,EAA2B,KAA3B,CAAT;AACD;;AACD,SAAOH,GAAG,CAACI,IAAJ,CAAS,GAAT,CAAP;AACD,CAZM;AAcP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAe;AAAA,MAAdtB,IAAc,uEAAP,EAAO;AAClD,MAAMuB,qBAAqB,GAAGvB,IAAI,CAACwB,WAAL,CAAiB,GAAjB,CAA9B;AACA,SAAOxB,IAAI,CAACyB,SAAL,CAAe,CAAf,EAAkBF,qBAAlB,CAAP;AACD,CAHM;AAKP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACT,GAAD,EAAMU,IAAN,EAAe;AACxC,MAAMC,SAAS,GAAGd,IAAI,CAACe,IAAL,CAAUZ,GAAG,CAACE,MAAJ,GAAaQ,IAAvB,CAAlB;AACA,MAAMG,MAAM,GAAG,IAAIzC,KAAJ,CAAUuC,SAAV,CAAf;;AAEA,OAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAApB,EAAuBD,CAAC,GAAGH,SAA3B,EAAsC,EAAEG,CAAF,EAAKC,CAAC,IAAIL,IAAhD,EAAsD;AACpDG,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAYd,GAAG,CAACgB,MAAJ,CAAWD,CAAX,EAAcL,IAAd,CAAZ;AACD;;AAED,SAAOG,MAAP;AACD,CATM","sourcesContent":["import * as TYPE from \"../actions/types\";\n\nexport const dispatcher = ({ dispatch, action, payload }) => {\n  dispatch({\n    type: action,\n    payload,\n  });\n};\n\nexport const optionsDispatch = ({ data, dispatch, type }) => {\n  if (data.status == \"ok\" && data.data instanceof Array) {\n    const { data: lists } = data;\n    let payload = {\n      data: {},\n      listsById: [],\n    };\n\n    lists.map((item) => {\n      payload.data[item.id_code] = {\n        label: item.description,\n        value: item.id_code,\n      };\n      payload.listsById.push(item.id_code);\n    });\n\n    dispatcher({\n      dispatch,\n      action: TYPE[`FETCH_${type}_SUCCESS`],\n      payload: payload,\n    });\n  } else {\n    dispatcher({\n      dispatch,\n      action: TYPE[`FETCH_${type}_ERROR`],\n    });\n  }\n};\n\nexport const getFormattedDate = (date) => {\n  let year = date.getFullYear();\n  let month = (1 + date.getMonth()).toString().padStart(2, \"0\");\n  let day = date.getDate().toString().padStart(2, \"0\");\n\n  return month + \"/\" + day + \"/\" + year;\n};\n\nexport const APIErrorLogging = (caller, error) => {\n  // if(__DEV__) {\n  //   if (error.response) {\n  //     // The request was made and the server responded with a status code\n  //     // that falls out of the range of 2xx\n  //     console.warn(\n  //       `${caller} request was made but the sercer responded with a status code that falls out of the range of 2xx`\n  //     );\n  //     console.warn(`${caller} Response Data: `, error.response.data);\n  //     console.warn(`${caller} Response Status: `, error.response.status);\n  //     console.warn(`${caller} Response Headers: `, error.response.headers);\n  //   } else if (error.request) {\n  //     // The request was made but no response was received\n  //     // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n  //     // http.ClientRequest in node.js\n  //     console.warn(`${caller} request was made but no response was received`)\n  //     console.warn(`${caller} Request: `,error.request);\n  //   } else {\n  //     // Something happened in setting up the request that triggered an Error\n  //     console.warn(`Something happened in setting up ${caller} request that triggered an Error`);\n  //     console.warn(\"Error\", error.message);\n  //   }\n    \n  //   console.warn(`${caller} Config: `, error.config);\n  // }\n};\n\nexport const toAmountWithTwoDecimals = (amount) => {\n  amount = Math.abs(amount);\n  amount = amount.toFixed(2);\n\n  let str = amount.split(\".\");\n  if (str[0].length >= 4) {\n    str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\");\n  }\n  if (str[1] && str[1].length >= 4) {\n    str[1] = str[1].replace(/(\\d{3})/g, \"$1 \");\n  }\n  return str.join(\".\");\n};\n\nexport const MMMDDYYYYToDateString = (date = \"\") => {\n  const indexOfLastWhiteSpace = date.lastIndexOf(\" \");\n  return date.substring(0, indexOfLastWhiteSpace);\n}\n\nexport const chunkSubstr = (str, size) => {\n  const numChunks = Math.ceil(str.length / size)\n  const chunks = new Array(numChunks)\n\n  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substr(o, size)\n  }\n\n  return chunks\n}"]},"metadata":{},"sourceType":"module"}
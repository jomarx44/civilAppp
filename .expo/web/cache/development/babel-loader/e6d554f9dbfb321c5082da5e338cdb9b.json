{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CHECK_OTP, CHECK_OTP_ERROR, CHECK_OTP_INITIALIZE, CHECK_OTP_SUCCESS, CHECK_OTPTM_SUCCESS, REQUEST_OTP, REQUEST_OTP_ERROR, REQUEST_OTP_INITIALIZE, REQUEST_OTP_SUCCESS } from \"../../actions/types\";\nvar otpState = {\n  isFetching: false,\n  message: \"\",\n  success: null,\n  isVerified: null,\n  token: ''\n};\nexport var otpReducer = function otpReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : otpState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var output;\n\n  switch (action.type) {\n    case REQUEST_OTP_INITIALIZE:\n      output = _objectSpread(_objectSpread({}, state), {}, {\n        isFetching: null,\n        success: null,\n        message: \"\",\n        token: ''\n      });\n      return output;\n\n    case REQUEST_OTP:\n      output = _objectSpread(_objectSpread({}, state), {}, {\n        isFetching: true,\n        success: null,\n        message: \"\",\n        token: ''\n      });\n      return output;\n\n    case REQUEST_OTP_SUCCESS:\n      output = {\n        isFetching: false,\n        success: true,\n        message: \"\",\n        token: action.payload.token\n      };\n      return output;\n\n    case REQUEST_OTP_ERROR:\n      output = {\n        isFetching: false,\n        success: false,\n        message: action.payload.message,\n        token: \"\"\n      };\n      return output;\n\n    case CHECK_OTP_INITIALIZE:\n      output = _objectSpread(_objectSpread({}, state), {}, {\n        isFetching: null,\n        message: \"\",\n        isVerified: null\n      });\n      return output;\n\n    case CHECK_OTP:\n      output = _objectSpread(_objectSpread({}, state), {}, {\n        isFetching: true,\n        message: \"\",\n        isVerified: null\n      });\n      return output;\n\n    case CHECK_OTPTM_SUCCESS:\n      output = _objectSpread(_objectSpread({}, state), {}, {\n        isFetching: false,\n        isVerified: true\n      });\n      return output;\n\n    case CHECK_OTP_ERROR:\n      output = _objectSpread(_objectSpread({}, state), {}, {\n        isFetching: false,\n        isVerified: false,\n        message: action.payload.message\n      });\n      return output;\n\n    default:\n      return state;\n  }\n};\nexport default otpReducer;","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/reducers/OTPReducer/OTP_reducer.js"],"names":["CHECK_OTP","CHECK_OTP_ERROR","CHECK_OTP_INITIALIZE","CHECK_OTP_SUCCESS","CHECK_OTPTM_SUCCESS","REQUEST_OTP","REQUEST_OTP_ERROR","REQUEST_OTP_INITIALIZE","REQUEST_OTP_SUCCESS","otpState","isFetching","message","success","isVerified","token","otpReducer","state","action","output","type","payload"],"mappings":";;;;;;AAAA,SACEA,SADF,EAEEC,eAFF,EAGEC,oBAHF,EAIEC,iBAJF,EAKEC,mBALF,EAMEC,WANF,EAOEC,iBAPF,EAQEC,sBARF,EASEC,mBATF;AAYA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,UAAU,EAAE,KADG;AAEfC,EAAAA,OAAO,EAAE,EAFM;AAGfC,EAAAA,OAAO,EAAE,IAHM;AAIfC,EAAAA,UAAU,EAAE,IAJG;AAKfC,EAAAA,KAAK,EAAE;AALQ,CAAjB;AAQA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAA8B;AAAA,MAA7BC,KAA6B,uEAArBP,QAAqB;AAAA,MAAXQ,MAAW;AACtD,MAAIC,MAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKZ,sBAAL;AACEW,MAAAA,MAAM,mCACDF,KADC;AAEJN,QAAAA,UAAU,EAAE,IAFR;AAGJE,QAAAA,OAAO,EAAE,IAHL;AAIJD,QAAAA,OAAO,EAAE,EAJL;AAKJG,QAAAA,KAAK,EAAE;AALH,QAAN;AAOA,aAAOI,MAAP;;AAEF,SAAKb,WAAL;AACEa,MAAAA,MAAM,mCACDF,KADC;AAEJN,QAAAA,UAAU,EAAE,IAFR;AAGJE,QAAAA,OAAO,EAAE,IAHL;AAIJD,QAAAA,OAAO,EAAE,EAJL;AAKJG,QAAAA,KAAK,EAAE;AALH,QAAN;AAQA,aAAOI,MAAP;;AAEF,SAAKV,mBAAL;AACEU,MAAAA,MAAM,GAAG;AACPR,QAAAA,UAAU,EAAE,KADL;AAEPE,QAAAA,OAAO,EAAE,IAFF;AAGPD,QAAAA,OAAO,EAAE,EAHF;AAIPG,QAAAA,KAAK,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAJf,OAAT;AAOA,aAAOI,MAAP;;AAEF,SAAKZ,iBAAL;AACEY,MAAAA,MAAM,GAAG;AACPR,QAAAA,UAAU,EAAE,KADL;AAEPE,QAAAA,OAAO,EAAE,KAFF;AAGPD,QAAAA,OAAO,EAAEM,MAAM,CAACG,OAAP,CAAeT,OAHjB;AAIPG,QAAAA,KAAK,EAAE;AAJA,OAAT;AAOA,aAAOI,MAAP;;AAEF,SAAKhB,oBAAL;AACEgB,MAAAA,MAAM,mCACDF,KADC;AAEJN,QAAAA,UAAU,EAAE,IAFR;AAGJC,QAAAA,OAAO,EAAE,EAHL;AAIJE,QAAAA,UAAU,EAAE;AAJR,QAAN;AAOA,aAAOK,MAAP;;AAEF,SAAKlB,SAAL;AACEkB,MAAAA,MAAM,mCACDF,KADC;AAEJN,QAAAA,UAAU,EAAE,IAFR;AAGJC,QAAAA,OAAO,EAAE,EAHL;AAIJE,QAAAA,UAAU,EAAE;AAJR,QAAN;AAOA,aAAOK,MAAP;;AAEF,SAAKd,mBAAL;AACEc,MAAAA,MAAM,mCACDF,KADC;AAEJN,QAAAA,UAAU,EAAE,KAFR;AAGJG,QAAAA,UAAU,EAAE;AAHR,QAAN;AAMA,aAAOK,MAAP;;AAEF,SAAKjB,eAAL;AACEiB,MAAAA,MAAM,mCACDF,KADC;AAEJN,QAAAA,UAAU,EAAE,KAFR;AAGJG,QAAAA,UAAU,EAAE,KAHR;AAIJF,QAAAA,OAAO,EAAEM,MAAM,CAACG,OAAP,CAAeT;AAJpB,QAAN;AAOA,aAAOO,MAAP;;AAEF;AACE,aAAOF,KAAP;AAlFJ;AAoFD,CAtFM;AAwFP,eAAeD,UAAf","sourcesContent":["import {\n  CHECK_OTP,\n  CHECK_OTP_ERROR,\n  CHECK_OTP_INITIALIZE,\n  CHECK_OTP_SUCCESS,\n  CHECK_OTPTM_SUCCESS,\n  REQUEST_OTP,\n  REQUEST_OTP_ERROR,\n  REQUEST_OTP_INITIALIZE,\n  REQUEST_OTP_SUCCESS,\n} from \"../../actions/types\";\n\nconst otpState = {\n  isFetching: false,\n  message: \"\",\n  success: null,\n  isVerified: null,\n  token: ''\n};\n\nexport const otpReducer = (state = otpState, action) => {\n  let output;\n  switch (action.type) {\n    case REQUEST_OTP_INITIALIZE:\n      output = {\n        ...state,\n        isFetching: null,\n        success: null,\n        message: \"\",\n        token: ''\n      };\n      return output;\n\n    case REQUEST_OTP:\n      output = {\n        ...state,\n        isFetching: true,\n        success: null,\n        message: \"\",\n        token: ''\n      };\n      \n      return output;\n\n    case REQUEST_OTP_SUCCESS:\n      output = {\n        isFetching: false,\n        success: true,\n        message: \"\",\n        token: action.payload.token,\n      }\n      \n      return output;\n\n    case REQUEST_OTP_ERROR:\n      output = {\n        isFetching: false,\n        success: false,\n        message: action.payload.message,\n        token: \"\",\n      };\n      \n      return output;\n\n    case CHECK_OTP_INITIALIZE:\n      output = {\n        ...state,\n        isFetching: null,\n        message: \"\",\n        isVerified: null\n      }\n\n      return output\n\n    case CHECK_OTP:\n      output = {\n        ...state,\n        isFetching: true,\n        message: \"\",\n        isVerified: null\n      };\n      \n      return output;\n\n    case CHECK_OTPTM_SUCCESS: \n      output = {\n        ...state,\n        isFetching: false,\n        isVerified: true\n      };\n      \n      return output;\n\n    case CHECK_OTP_ERROR:\n      output = {\n        ...state,\n        isFetching: false,\n        isVerified: false,\n        message: action.payload.message\n      };\n      \n      return output;\n\n    default:\n      return state;\n  }\n};\n\nexport default otpReducer;\n"]},"metadata":{},"sourceType":"module"}
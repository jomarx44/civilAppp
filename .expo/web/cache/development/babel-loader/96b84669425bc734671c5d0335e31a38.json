{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport Axios from \"axios\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nexport var configureStore = function configureStore() {\n  var middleware = applyMiddleware(thunk);\n\n  if (__DEV__) {\n    console.log(\"DEV MODE\");\n    middleware = composeWithDevTools(middleware);\n  }\n\n  var store = createStore(reducers, middleware);\n\n  if (module.hot) {\n    module.hot.accept(\"./reducers\", function () {\n      var nextRootReducer = require(\"./reducers\");\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/redux/store.js"],"names":["createStore","applyMiddleware","reducers","thunk","Axios","composeWithDevTools","configureStore","middleware","__DEV__","console","log","store","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,QAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,MAAIC,UAAU,GAAGN,eAAe,CAACE,KAAD,CAAhC;;AAEA,MAAIK,OAAJ,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAH,IAAAA,UAAU,GAAGF,mBAAmB,CAACE,UAAD,CAAhC;AACD;;AAED,MAAMI,KAAK,GAAGX,WAAW,CAACE,QAAD,EAAWK,UAAX,CAAzB;;AAEA,MAAIK,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,YAAM;AACpC,UAAMC,eAAe,GAAGC,OAAO,cAA/B;;AACAL,MAAAA,KAAK,CAACM,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AAED,SAAOJ,KAAP;AACD,CAlBM","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport Axios from \"axios\"\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport const configureStore = () => {\n  let middleware = applyMiddleware(thunk);\n\n  if (__DEV__) {\n    console.log(\"DEV MODE\");\n    middleware = composeWithDevTools(middleware);\n  }\n\n  const store = createStore(reducers, middleware);\n\n  if (module.hot) {\n    module.hot.accept(\"./reducers\", () => {\n      const nextRootReducer = require(\"./reducers\");\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { postOnly, alertBox, responseData } from \"../../actions/axiosCalls\";\nimport * as NavigationService from \"../../navigation/NavigationService\";\nexport var ADD_ATTRIBUTES = \"ADD_ATTRIBUTES\";\nexport var PUT_ATTRIBUTES = \"PUT_ATTRIBUTES\";\nexport var PUT_ATTRIBUTES_SUCCESS = \"PUT_ATTRIBUTES_SUCCESS\";\nexport var PUT_ATTRIBUTES_ERROR = \"PUT_ATTRIBUTES_ERROR\";\nexport var PUT_ATTRIBUTES_INITIALIZE = \"PUT_ATTRIBUTES_INITIALIZE\";\nexport var FETCH_ATTRIBUTES = \"FETCH_ATTRIBUTES\";\nexport var FETCH_ATTRIBUTES_SUCCESS = \"FETCH_ATTRIBUTES_SUCCESS\";\nexport var FETCH_ATTRIBUTES_ERROR = \"FETCH_ATTRIBUTES_ERROR\";\nexport var REQUEST_ID = \"REQUEST_ID\";\nexport var REQUEST_ID_SUCCESS = \"REQUEST_ID_SUCCESS\";\nexport var REQUEST_ID_ERROR = \"REQUEST_ID_ERROR\";\nexport var CLEAR_TEMPORARY_KEY = \"CLEAR_TEMPORARY_KEY\";\nexport var getAttributes = function getAttributes(_ref) {\n  var name = _ref.name,\n      access_token = _ref.access_token;\n  var json_data = {\n    path: \"bf33cd0a-aa9c-4424-9253-bf0d82a101fd/manage\",\n    body: {\n      action: \"get_attribute_name\",\n      attribute_name: name,\n      access_token: access_token\n    }\n  };\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_ATTRIBUTES\n    });\n    return postOnly(json_data).then(function (response) {\n      dispatch({\n        type: FETCH_ATTRIBUTES_SUCCESS,\n        payload: {\n          attribute: _defineProperty({}, name, JSON.parse(response.data[name]))\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: FETCH_ATTRIBUTES_ERROR,\n        payload: {}\n      });\n    });\n  };\n};\nexport var putAttributes = function putAttributes(_ref2) {\n  var attribute_name = _ref2.attribute_name,\n      attribute_value = _ref2.attribute_value,\n      access_token = _ref2.access_token;\n  var json_data = {\n    path: \"bf33cd0a-aa9c-4424-9253-bf0d82a101fd/manage\",\n    body: {\n      action: \"put_attribute_name\",\n      attribute_name: attribute_name,\n      attribute_value: attribute_value,\n      access_token: access_token\n    }\n  };\n  return function (dispatch) {\n    dispatch({\n      type: PUT_ATTRIBUTES\n    });\n    return postOnly(json_data).then(function (response) {\n      if (response.data.success) {\n        dispatch({\n          type: PUT_ATTRIBUTES_SUCCESS,\n          payload: response.data\n        });\n        alertBox(\"Successfully Created!\");\n        NavigationService.navigate(\"Dashboard\");\n      } else {\n        dispatch({\n          type: response.data.success ? PUT_ATTRIBUTES_SUCCESS : PUT_ATTRIBUTES_ERROR,\n          payload: response.data.success ? response.data : {}\n        });\n        alertBox(\"Failed while creating an account\");\n      }\n    }).catch(function (error) {\n      alertBox(\"Error has occured!\");\n      dispatch({\n        type: PUT_ATTRIBUTES_ERROR,\n        payload: {}\n      });\n\n      if (error.response) {} else if (error.request) {} else {}\n    });\n  };\n};\nexport var addAttributes = function addAttributes(attributes) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_ATTRIBUTES,\n      attributes: attributes\n    });\n  };\n};\nexport var requestUniqueId = function requestUniqueId(attributes) {\n  var json_data = {\n    path: \"sunsavings/SSCreateAccountRequest\",\n    body: attributes\n  };\n  return function (dispatch) {\n    dispatch({\n      type: REQUEST_ID\n    });\n    return postOnly(json_data).then(function (_ref3) {\n      var _ref3$data = _ref3.data,\n          status = _ref3$data.status,\n          data = _ref3$data.data;\n      dispatch({\n        type: status == \"ok\" ? REQUEST_ID_SUCCESS : REQUEST_ID_ERROR,\n        payload: status == \"ok\" ? data[0] : {}\n      });\n    }).catch(function (error) {\n      alertBox(\"Error has occured!\");\n      dispatch({\n        type: REQUEST_ID_ERROR,\n        payload: {}\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/reducers/AppAttributeReducer/AppAttribute_actions.js"],"names":["postOnly","alertBox","responseData","NavigationService","ADD_ATTRIBUTES","PUT_ATTRIBUTES","PUT_ATTRIBUTES_SUCCESS","PUT_ATTRIBUTES_ERROR","PUT_ATTRIBUTES_INITIALIZE","FETCH_ATTRIBUTES","FETCH_ATTRIBUTES_SUCCESS","FETCH_ATTRIBUTES_ERROR","REQUEST_ID","REQUEST_ID_SUCCESS","REQUEST_ID_ERROR","CLEAR_TEMPORARY_KEY","getAttributes","name","access_token","json_data","path","body","action","attribute_name","dispatch","type","then","response","payload","attribute","JSON","parse","data","catch","error","putAttributes","attribute_value","success","navigate","request","addAttributes","attributes","requestUniqueId","status"],"mappings":"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","sourcesContent":["import { postOnly, alertBox, responseData } from \"../../actions/axiosCalls\";\nimport * as NavigationService from \"../../navigation/NavigationService\"\n\n// Actions\nexport const ADD_ATTRIBUTES = \"ADD_ATTRIBUTES\";\n\nexport const PUT_ATTRIBUTES = \"PUT_ATTRIBUTES\";\nexport const PUT_ATTRIBUTES_SUCCESS = \"PUT_ATTRIBUTES_SUCCESS\";\nexport const PUT_ATTRIBUTES_ERROR = \"PUT_ATTRIBUTES_ERROR\";\nexport const PUT_ATTRIBUTES_INITIALIZE = \"PUT_ATTRIBUTES_INITIALIZE\";\n\nexport const FETCH_ATTRIBUTES = \"FETCH_ATTRIBUTES\";\nexport const FETCH_ATTRIBUTES_SUCCESS = \"FETCH_ATTRIBUTES_SUCCESS\";\nexport const FETCH_ATTRIBUTES_ERROR = \"FETCH_ATTRIBUTES_ERROR\";\n\nexport const REQUEST_ID = \"REQUEST_ID\";\nexport const REQUEST_ID_SUCCESS = \"REQUEST_ID_SUCCESS\";\nexport const REQUEST_ID_ERROR = \"REQUEST_ID_ERROR\";\nexport const CLEAR_TEMPORARY_KEY = \"CLEAR_TEMPORARY_KEY\";\n\n// Action Creators\nexport const getAttributes = ({ name, access_token }) => {\n  const json_data = {\n    path: \"bf33cd0a-aa9c-4424-9253-bf0d82a101fd/manage\",\n    body: {\n      action: \"get_attribute_name\",\n      attribute_name: name,\n      access_token: access_token\n    }\n  };\n  return dispatch => {\n    dispatch({\n      type: FETCH_ATTRIBUTES\n    });\n    return postOnly(json_data)\n      .then(response => {\n        \n        dispatch({\n          type: FETCH_ATTRIBUTES_SUCCESS,\n          payload: {\n            attribute: {\n              [name]: JSON.parse(response.data[name])\n            }\n          }\n        });\n      })\n      .catch(error => {\n        \n        dispatch({\n          type: FETCH_ATTRIBUTES_ERROR,\n          payload: {}\n        });\n      });\n  };\n};\n\nexport const putAttributes = ({\n  attribute_name,\n  attribute_value,\n  access_token\n}) => {\n  const json_data = {\n    path: \"bf33cd0a-aa9c-4424-9253-bf0d82a101fd/manage\",\n    body: {\n      action: \"put_attribute_name\",\n      attribute_name,\n      attribute_value,\n      access_token\n    }\n  };\n  \n  return dispatch => {\n    dispatch({\n      type: PUT_ATTRIBUTES\n    });\n    return postOnly(json_data)\n      .then(response => {\n        \n        if(response.data.success) {\n          dispatch({\n            type: PUT_ATTRIBUTES_SUCCESS,\n            payload: response.data\n          });\n          alertBox(\"Successfully Created!\");\n          NavigationService.navigate(\"Dashboard\");\n        } else {\n          dispatch({\n            type: response.data.success\n              ? PUT_ATTRIBUTES_SUCCESS\n              : PUT_ATTRIBUTES_ERROR,\n            payload: response.data.success ? response.data : {}\n          });\n          alertBox(\"Failed while creating an account\");\n        }\n        \n      })\n      .catch(error => {\n        alertBox(\"Error has occured!\");\n        \n        dispatch({\n          type: PUT_ATTRIBUTES_ERROR,\n          payload: {}\n        });\n\n        if (error.response) {\n          \n          \n          \n        } else if (error.request) {\n          \n        } else {\n          \n        }\n        \n      });\n  };\n};\n\nexport const addAttributes = attributes => {\n  return dispatch => {\n    dispatch({\n      type: ADD_ATTRIBUTES,\n      attributes\n    });\n  };\n};\n\nexport const requestUniqueId = attributes => {\n  const json_data = {\n    path: \"sunsavings/SSCreateAccountRequest\",\n    body: attributes\n  };\n  return dispatch => {\n    dispatch({\n      type: REQUEST_ID\n    });\n    \n    return postOnly(json_data)\n      .then(({data: {status, data}}) => {\n        \n        dispatch({\n          type:\n            status == \"ok\"\n              ? REQUEST_ID_SUCCESS\n              : REQUEST_ID_ERROR,\n          payload: status == \"ok\" ? data[0] : {}\n        });\n      })\n      .catch(error => {\n        alertBox(\"Error has occured!\");\n        \n        dispatch({\n          type: REQUEST_ID_ERROR,\n          payload: {}\n        });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
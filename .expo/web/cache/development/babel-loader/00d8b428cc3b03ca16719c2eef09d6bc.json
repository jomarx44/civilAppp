{"ast":null,"code":"var _jsxFileName = \"/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/screens/SelectSourceAccount/SelectSourceContainer.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { SelectSourceAccount } from \"./SelectSourceAccount\";\nimport { constants } from \"../../constants\";\nimport { getBankAccountsAsync } from \"../../redux/bankAccount/actions\";\nexport var SelectSourceContainer = function SelectSourceContainer(props) {\n  var bankAccount = props.bankAccount,\n      getBankAccounts = props.getBankAccounts,\n      route = props.route,\n      navigation = props.navigation;\n\n  var handlePress = function handlePress(account) {\n    var _route$params;\n\n    if ((_route$params = route.params) == null ? void 0 : _route$params.previousRouteName) {\n      var _route$params2;\n\n      navigation.navigate((_route$params2 = route.params) == null ? void 0 : _route$params2.previousRouteName, {\n        formData: {\n          sourceAccountNumber: account.accountNumber,\n          sourceAccount: account\n        }\n      });\n    }\n  };\n\n  return React.createElement(SelectSourceAccount, {\n    data: Object.values(bankAccount.list).map(function (account) {\n      var accountNumber = account.accountNumber,\n          accountType = account.accountType,\n          accountMainName = account.accountMainName,\n          accountCurrencyCode = account.accountCurrencyCode,\n          accountLedgerFormatted = account.accountLedgerFormatted;\n      return {\n        accountNumber: accountNumber,\n        accountType: constants.accountTypes[accountType],\n        accountName: accountMainName,\n        availableBalance: accountCurrencyCode + \" \" + accountLedgerFormatted,\n        onPress: function onPress() {\n          return handlePress(account);\n        }\n      };\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    bankAccount: state.bankAccount\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getBankAccounts: function getBankAccounts(CISNumber) {\n      dispatch(getBankAccountsAsync(CISNumber));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectSourceContainer);","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/screens/SelectSourceAccount/SelectSourceContainer.js"],"names":["React","useEffect","PropTypes","connect","SelectSourceAccount","constants","getBankAccountsAsync","SelectSourceContainer","props","bankAccount","getBankAccounts","route","navigation","handlePress","account","params","previousRouteName","navigate","formData","sourceAccountNumber","accountNumber","sourceAccount","Object","values","list","map","accountType","accountMainName","accountCurrencyCode","accountLedgerFormatted","accountTypes","accountName","availableBalance","onPress","mapStateToProps","state","mapDispatchToProps","dispatch","CISNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,SAASC,mBAAT;AAGA,SAASC,SAAT;AACA,SAASC,oBAAT;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AAAA,MACtCC,WADsC,GACcD,KADd,CACtCC,WADsC;AAAA,MACzBC,eADyB,GACcF,KADd,CACzBE,eADyB;AAAA,MACRC,KADQ,GACcH,KADd,CACRG,KADQ;AAAA,MACDC,UADC,GACcJ,KADd,CACDI,UADC;;AAG9C,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAa;AAAA;;AAC/B,yBAAIH,KAAK,CAACI,MAAV,qBAAI,cAAcC,iBAAlB,EAAqC;AAAA;;AACnCJ,MAAAA,UAAU,CAACK,QAAX,mBAAoBN,KAAK,CAACI,MAA1B,qBAAoB,eAAcC,iBAAlC,EAAqD;AACnDE,QAAAA,QAAQ,EAAE;AACRC,UAAAA,mBAAmB,EAAEL,OAAO,CAACM,aADrB;AAERC,UAAAA,aAAa,EAAEP;AAFP;AADyC,OAArD;AAMD;AACF,GATD;;AAWA,SACE,oBAAC,mBAAD;AACE,IAAA,IAAI,EAAEQ,MAAM,CAACC,MAAP,CAAcd,WAAW,CAACe,IAA1B,EAAgCC,GAAhC,CACJ,UAACX,OAAD,EAAa;AAAA,UAETM,aAFS,GAOPN,OAPO,CAETM,aAFS;AAAA,UAGTM,WAHS,GAOPZ,OAPO,CAGTY,WAHS;AAAA,UAITC,eAJS,GAOPb,OAPO,CAITa,eAJS;AAAA,UAKTC,mBALS,GAOPd,OAPO,CAKTc,mBALS;AAAA,UAMTC,sBANS,GAOPf,OAPO,CAMTe,sBANS;AAQX,aAAO;AACLT,QAAAA,aAAa,EAAEA,aADV;AAELM,QAAAA,WAAW,EAAErB,SAAS,CAACyB,YAAV,CAAuBJ,WAAvB,CAFR;AAGLK,QAAAA,WAAW,EAAEJ,eAHR;AAILK,QAAAA,gBAAgB,EAAKJ,mBAAL,SAA4BC,sBAJvC;AAKLI,QAAAA,OAAO,EAAE;AAAA,iBAAMpB,WAAW,CAACC,OAAD,CAAjB;AAAA;AALJ,OAAP;AAOD,KAhBG,CADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAsBD,CApCM;;AAsCP,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACL1B,IAAAA,WAAW,EAAE0B,KAAK,CAAC1B;AADd,GAAP;AAGD,CAJD;;AAMA,IAAM2B,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACL3B,IAAAA,eAAe,EAAE,yBAAC4B,SAAD,EAAe;AAC9BD,MAAAA,QAAQ,CAAC/B,oBAAoB,CAACgC,SAAD,CAArB,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAenC,OAAO,CACpB+B,eADoB,EAEpBE,kBAFoB,CAAP,CAGb7B,qBAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n// Custom Components Here\nimport { SelectSourceAccount } from \"./SelectSourceAccount\";\n\n// Others\nimport { constants } from \"../../constants\";\nimport { getBankAccountsAsync } from \"../../redux/bankAccount/actions\";\n\nexport const SelectSourceContainer = (props) => {\n  const { bankAccount, getBankAccounts, route, navigation } = props;\n\n  const handlePress = (account) => {\n    if (route.params?.previousRouteName) {\n      navigation.navigate(route.params?.previousRouteName, {\n        formData: {\n          sourceAccountNumber: account.accountNumber,\n          sourceAccount: account\n        },\n      });\n    }\n  };\n\n  return (\n    <SelectSourceAccount\n      data={Object.values(bankAccount.list).map(\n        (account) => {\n          const {\n            accountNumber,\n            accountType,\n            accountMainName,\n            accountCurrencyCode,\n            accountLedgerFormatted,\n          } = account;\n          return {\n            accountNumber: accountNumber,\n            accountType: constants.accountTypes[accountType],\n            accountName: accountMainName,\n            availableBalance: `${accountCurrencyCode} ${accountLedgerFormatted}`,\n            onPress: () => handlePress(account),\n          };\n        }\n      )}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    bankAccount: state.bankAccount,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getBankAccounts: (CISNumber) => {\n      dispatch(getBankAccountsAsync(CISNumber));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectSourceContainer);\n"]},"metadata":{},"sourceType":"module"}
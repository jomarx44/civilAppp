{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/components/Camera/main.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { styles } from \"./styles\";\nimport { Camera as ExpoCamera } from \"expo-camera\";\nimport * as Permissions from \"expo-permissions\";\nimport { ContainedButton } from \"../Buttons\";\nimport { Ionicons } from \"@expo/vector-icons\";\nexport var Camera = function Camera(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(ExpoCamera.Constants.Type[props.cameraType ? props.cameraType : \"back\"]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cameraType = _useState4[0],\n      setCameraType = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cameraReady = _useState6[0],\n      setCameraReady = _useState6[1];\n\n  var _useState7 = useState(props.selfieData),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageData = _useState8[0],\n      setImageData = _useState8[1];\n\n  var onSave = props.onSave;\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      width = _Dimensions$get.width;\n\n  var contentWidth = width * 0.85;\n  var camera = useRef();\n  useEffect(function () {\n    var askPermission = function askPermission() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function askPermission$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n              setHasPermission(status === \"granted\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    askPermission();\n  }, []);\n\n  var snap = function snap() {\n    var options;\n    return _regeneratorRuntime.async(function snap$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (camera && cameraReady) {\n              options = {\n                quality: 0.5,\n                base64: true,\n                onPictureSaved: function onPictureSaved(response) {\n                  setImageData(response);\n                }\n              };\n              camera.takePictureAsync(options);\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, !imageData ? React.createElement(ExpoCamera, {\n    ratio: \"1:1\",\n    style: {\n      width: contentWidth,\n      height: contentWidth\n    },\n    type: cameraType,\n    ref: function ref(_ref) {\n      camera = _ref;\n    },\n    onCameraReady: function onCameraReady() {\n      setCameraReady(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"transparent\",\n      flexDirection: \"row\",\n      justifyContent: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      height: 40,\n      width: 40,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    onPress: function onPress() {\n      setCameraType(cameraType === ExpoCamera.Constants.Type.back ? ExpoCamera.Constants.Type.front : ExpoCamera.Constants.Type.back);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-reverse-camera\",\n    size: 24,\n    color: \"#FFF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })))) : React.createElement(Image, {\n    style: {\n      width: contentWidth,\n      height: contentWidth\n    },\n    source: {\n      uri: imageData ? imageData.uri : null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"flex-end\",\n      paddingHorizontal: (width - contentWidth) / 2,\n      paddingVertical: 27\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(ContainedButton, {\n    disabled: imageData ? false : true,\n    buttonStyle: {\n      flex: 1,\n      marginRight: 20,\n      backgroundColor: \"#264f8f\"\n    },\n    label: \"RETAKE\",\n    onPress: function onPress() {\n      setImageData(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), React.createElement(ContainedButton, {\n    buttonStyle: {\n      flex: 1\n    },\n    label: imageData ? \"SAVE\" : \"SNAP\",\n    onPress: function onPress() {\n      return imageData ? onSave(imageData) : snap();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Camera;","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/components/Camera/main.js"],"names":["React","useEffect","useState","useRef","styles","Camera","ExpoCamera","Permissions","ContainedButton","Ionicons","props","hasPermission","setHasPermission","Constants","Type","cameraType","setCameraType","cameraReady","setCameraReady","selfieData","imageData","setImageData","onSave","Dimensions","get","width","contentWidth","camera","askPermission","askAsync","CAMERA","status","snap","options","quality","base64","onPictureSaved","response","takePictureAsync","container","flex","justifyContent","alignItems","height","ref","backgroundColor","flexDirection","back","front","uri","paddingHorizontal","paddingVertical","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Dimensions, Text, TouchableOpacity, View, Image } from \"react-native\";\nimport { styles } from \"./styles\";\nimport { Camera as ExpoCamera } from \"expo-camera\";\nimport * as Permissions from \"expo-permissions\";\nimport { ContainedButton } from \"../Buttons\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nexport const Camera = (props) => {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [cameraType, setCameraType] = useState(ExpoCamera.Constants.Type[props.cameraType ? props.cameraType : \"back\"]);\n  const [cameraReady, setCameraReady] = useState(false);\n  const [imageData, setImageData] = useState(props.selfieData);\n  const { onSave } = props;\n\n  const { width } = Dimensions.get(\"window\");\n  const contentWidth = width * 0.85;\n\n  let camera = useRef();\n\n  useEffect(() => {\n    const askPermission = async () => {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA);\n      setHasPermission(status === \"granted\");\n    };\n\n    askPermission();\n  }, []);\n\n  const snap = async () => {\n    if (camera && cameraReady) {\n      const options = {\n        quality: 0.5,\n        base64: true,\n        onPictureSaved: (response) => {\n          setImageData(response);\n        },\n      };\n      camera.takePictureAsync(options);\n    }\n  };\n\n  if (hasPermission === null) {\n    return <View />;\n  }\n\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={{ flex: 10, justifyContent: \"center\", alignItems: \"center\" }}\n      >\n        {!imageData ? (\n          <ExpoCamera\n            ratio=\"1:1\"\n            style={{ width: contentWidth, height: contentWidth }}\n            type={cameraType}\n            ref={(ref) => {\n              camera = ref;\n            }}\n            onCameraReady={() => {\n              setCameraReady(true);\n            }}\n          >\n            <View\n              style={{\n                flex: 1,\n                backgroundColor: \"transparent\",\n                flexDirection: \"row\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <TouchableOpacity\n                style={{\n                  height: 40,\n                  width: 40,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n                onPress={() => {\n                  setCameraType(\n                    cameraType === ExpoCamera.Constants.Type.back\n                      ? ExpoCamera.Constants.Type.front\n                      : ExpoCamera.Constants.Type.back\n                  );\n                }}\n              >\n                <Ionicons name=\"md-reverse-camera\" size={24} color=\"#FFF\" />\n              </TouchableOpacity>\n            </View>\n          </ExpoCamera>\n        ) : (\n          <Image\n            style={{ width: contentWidth, height: contentWidth }}\n            source={{ uri: imageData ? imageData.uri : null }}\n          />\n        )}\n      </View>\n      <View\n        style={{\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"flex-end\",\n          paddingHorizontal: (width - contentWidth) / 2,\n          paddingVertical: 27,\n        }}\n      >\n        <ContainedButton\n          disabled={imageData ? false : true}\n          buttonStyle={{ flex: 1, marginRight: 20, backgroundColor: \"#264f8f\" }}\n          label=\"RETAKE\"\n          onPress={() => {\n            setImageData(null);\n          }}\n        />\n        <ContainedButton\n          buttonStyle={{ flex: 1 }}\n          label={imageData ? \"SAVE\" : \"SNAP\"}\n          onPress={() => (imageData ? onSave(imageData) : snap())}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default Camera;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/screens/ChangePassword/ChangePasswordContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { connect } from \"react-redux\";\nimport validate from \"validate.js\";\nimport { ChangePassword } from \"./ChangePassword\";\nimport { config } from \"./config\";\nimport { profile, user as userAPI } from \"../../API\";\nexport var ChangePasswordContainer = function ChangePasswordContainer(props) {\n  var _useState = useState({\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      invalids = _useState4[0],\n      setInvalids = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSubmitting = _useState6[0],\n      setSubmittingStatus = _useState6[1];\n\n  var auth = props.auth,\n      user = props.user,\n      navigation = props.navigation,\n      params = props.route.params;\n  useEffect(function () {\n    if (params == null ? void 0 : params.formData) {\n      setFormData(function (currentState) {\n        return _objectSpread(_objectSpread({}, currentState), params == null ? void 0 : params.formData);\n      });\n    }\n  }, [params == null ? void 0 : params.formData]);\n\n  var handleBlur = function handleBlur(index) {\n    var additionalValidation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!config.validate) {\n      return true;\n    }\n\n    var newInvalids = {};\n\n    if (__DEV__) {\n      if (!formData[index] === undefined) {\n        console.warn(\"'\" + index + \"' index is not found in [formData] state.\");\n      }\n\n      if (!config.constraints[index]) {\n        console.warn(\"There are no Validation Constraints for '\" + index + \"' form data index.\");\n      }\n    }\n\n    var toBeValidated = _objectSpread(_objectSpread({}, additionalValidation), {}, _defineProperty({}, index, formData[index]));\n\n    var invalid = handleValidate(toBeValidated, _defineProperty({}, index, config.constraints[index]));\n\n    if (!invalid) {\n      newInvalids = _objectSpread({}, invalids);\n      delete newInvalids[index];\n    } else {\n      newInvalids = _objectSpread(_objectSpread({}, invalids), invalid);\n    }\n\n    setInvalids(newInvalids);\n    return newInvalids;\n  };\n\n  var handleChange = function handleChange(index, value) {\n    setFormData(function (currentState) {\n      return _objectSpread(_objectSpread({}, currentState), {}, _defineProperty({}, index, value));\n    });\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var invalid = handleValidate(formData, config.constraints);\n\n    if (invalid) {\n      setInvalids(invalid);\n    } else {\n      setSubmittingStatus(true);\n      handleSavePassword();\n    }\n  };\n\n  var handleSavePassword = function handleSavePassword() {\n    var userData = {\n      id: user.info.id,\n      emails: user.info.emails,\n      name: {\n        familyName: user.info.lastName,\n        givenName: user.info.firstName,\n        middleName: user.info.middleName\n      },\n      password: formData.password\n    };\n    userAPI.update(userData).then(function (_ref) {\n      var _ref$data = _ref.data,\n          success = _ref$data.success,\n          status = _ref$data.status,\n          detail = _ref$data.detail,\n          data = _objectWithoutProperties(_ref$data, [\"success\", \"status\", \"detail\"]);\n\n      if (status === \"CONFIRMED\") {\n        Alert.alert(\"Change Password\", \"Your password was successfully changed.\", [{\n          text: \"Ok\",\n          onPress: function onPress() {\n            return navigation.navigate(\"ViewProfile\", {\n              reload: true\n            });\n          }\n        }]);\n      } else {\n        Alert.alert(\"Change Password\", detail, [{\n          text: \"Retry\",\n          onPress: function onPress() {\n            return handleSavePassword();\n          }\n        }, {\n          text: \"Cancel\",\n          style: \"cancel\"\n        }]);\n      }\n    }).catch(function (error) {\n      Alert.alert(\"Server Error\", \"Ooops! There's something wrong connecting to the server. Please try again.\");\n    }).finally(function () {\n      return setSubmittingStatus(false);\n    });\n  };\n\n  var handleValidate = function handleValidate() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var constraints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!config.validate) {\n      return false;\n    }\n\n    var invalid = validate(data, constraints);\n    return invalid;\n  };\n\n  return React.createElement(ChangePassword, {\n    data: formData,\n    invalids: invalids,\n    isSubmitting: isSubmitting,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  });\n};\nChangePasswordContainer.propTypes = {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return function () {\n    return {\n      auth: state.auth,\n      user: state.user\n    };\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePasswordContainer);","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/screens/ChangePassword/ChangePasswordContainer.js"],"names":["React","useEffect","useState","PropTypes","connect","validate","ChangePassword","config","profile","user","userAPI","ChangePasswordContainer","props","password","confirmPassword","formData","setFormData","invalids","setInvalids","isSubmitting","setSubmittingStatus","auth","navigation","params","route","currentState","handleBlur","index","additionalValidation","newInvalids","__DEV__","undefined","console","warn","constraints","toBeValidated","invalid","handleValidate","handleChange","value","handleSubmit","handleSavePassword","userData","id","info","emails","name","familyName","lastName","givenName","firstName","middleName","update","then","data","success","status","detail","Alert","alert","text","onPress","navigate","reload","style","catch","error","finally","propTypes","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Alert } from \"react-native\"\nimport { connect } from \"react-redux\";\nimport validate from \"validate.js\";\n\n// Form Component\nimport { ChangePassword } from \"./ChangePassword\";\n\n// Custom Component Here\n\n// Others\nimport { config } from \"./config\";\nimport { profile, user as userAPI } from \"../../API\"\n\nexport const ChangePasswordContainer = (props) => {\n  const [formData, setFormData] = useState({\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [invalids, setInvalids] = useState({});\n  const [isSubmitting, setSubmittingStatus] = useState(false);\n  const { auth, user, navigation, route: { params } } = props;\n\n  useEffect(() => {\n    if (params?.formData) {\n      setFormData((currentState) => ({\n        ...currentState,\n        ...params?.formData,\n      }));\n    }\n  }, [params?.formData]);\n\n  /**\n   * Handle Blur Event Listener\n   * @description Used for validating inputs when onBlur event is triggered\n   * @param {String} index formData index\n   * @param {Object} additionalValidation Additional data for validation (used for Equality Validation)\n   */\n  const handleBlur = (index, additionalValidation = {}) => {\n    if(!config.validate) {\n      return true;\n    }\n\n    let newInvalids = {};\n\n    if (__DEV__) {\n      // Warn the user if the given index doesn't exist in [formData] state\n      if (!formData[index] === undefined) {\n        console.warn(`'${index}' index is not found in [formData] state.`);\n      }\n\n      // Warn the user if there's no Validation Constraints to the specified index\n      if (!config.constraints[index]) {\n        console.warn(\n          `There are no Validation Constraints for '${index}' form data index.`\n        );\n      }\n    }\n\n    const toBeValidated = {\n      ...additionalValidation,\n      [index]: formData[index],\n    };\n\n    const invalid = handleValidate(toBeValidated, {\n      [index]: config.constraints[index],\n    });\n\n    if (!invalid) {\n      // Remove the specified index from [invalids] state\n      newInvalids = { ...invalids };\n      delete newInvalids[index];\n    } else {\n      // Add [invalid] to [invalids] state\n      newInvalids = {\n        ...invalids,\n        ...invalid,\n      };\n    }\n\n    // Set new Invalids as [invalids] state\n    setInvalids(newInvalids);\n\n    // Return New Invalids\n    return newInvalids;\n  };\n\n  const handleChange = (index, value) => {\n    setFormData((currentState) => ({\n      ...currentState,\n      [index]: value,\n    }));\n  };\n\n  const handleSubmit = () => {\n    // Validate\n    const invalid = handleValidate(formData, config.constraints);\n    if(invalid) {\n      setInvalids(invalid)\n    } else {  \n      setSubmittingStatus(true);\n      // Submit\n      handleSavePassword()\n    }\n  };\n\n  const handleSavePassword = () => {\n    const userData = {\n      id: user.info.id,\n      emails: user.info.emails,\n      name: {\n        familyName: user.info.lastName,\n        givenName: user.info.firstName,\n        middleName: user.info.middleName\n      },\n      password: formData.password\n    };\n    userAPI.update(userData)\n      .then(({data: { success, status, detail, ...data }}) => {\n        if(status === \"CONFIRMED\") {\n          Alert.alert(\n            \"Change Password\",\n            \"Your password was successfully changed.\",\n            [\n              {\n                text: \"Ok\",\n                onPress: () => navigation.navigate(\"ViewProfile\", { reload: true }),\n              },\n            ]\n          );\n        } else {\n          Alert.alert(\n            \"Change Password\",\n            detail,\n            [\n              {\n                text: \"Retry\",\n                onPress: () => handleSavePassword(),\n              },\n              {\n                text: \"Cancel\",\n                style: \"cancel\",\n              },\n            ]\n          );\n        }\n      })\n      .catch((error) => {\n        Alert.alert(\n          \"Server Error\",\n          \"Ooops! There's something wrong connecting to the server. Please try again.\"\n        );\n      })\n      .finally(() => setSubmittingStatus(false));\n  }\n\n  const handleValidate = (data = {}, constraints = {}) => {\n    if(!config.validate) {\n      return false;\n    }\n    \n    const invalid = validate(data, constraints);\n    // Do additional invalid data processing here\n    return invalid;\n  };\n\n  return (\n    <ChangePassword\n      data={formData}\n      invalids={invalids}\n      isSubmitting={isSubmitting}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      onSubmit={handleSubmit}\n    />\n  );\n};\n\nChangePasswordContainer.propTypes = {};\n\nconst mapStateToProps = (state) => () => {\n  return {\n    auth: state.auth,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChangePasswordContainer);\n"]},"metadata":{},"sourceType":"module"}
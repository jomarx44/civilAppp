{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_ACCOUNTS_INITIALIZE, FETCH_ACCOUNTS, FETCH_ACCOUNTS_ERROR, FETCH_ACCOUNTS_SUCCESS, FETCH_ACCOUNT_HISTORY_INITIALIZE, FETCH_ACCOUNT_HISTORY, FETCH_ACCOUNT_HISTORY_ERROR, FETCH_ACCOUNT_HISTORY_SUCCESS, FETCH_ACCOUNT_INFO_INITIALIZE, FETCH_ACCOUNT_INFO, FETCH_ACCOUNT_INFO_ERROR, FETCH_ACCOUNT_INFO_SUCCESS } from \"../actions\";\nvar initState = {\n  historyList: {},\n  historyListById: [],\n  infoList: {},\n  infoListById: [],\n  list: {},\n  listById: [],\n  suppliedParameters: {\n    accountNumber: \"\",\n    historyCount: 0,\n    CISNumber: \"\"\n  },\n  error: null,\n  isFetchingAccounts: false,\n  isFetchingAccountHistory: false,\n  isFetchingAccountInfo: false\n};\nexport var account = function account() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ACCOUNTS_INITIALIZE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: initState.list,\n        listById: initState.listById,\n        suppliedParameters: _objectSpread(_objectSpread({}, state.suppliedParameters), {}, {\n          CISNumber: initState.suppliedParameters.CISNumber\n        })\n      });\n\n    case FETCH_ACCOUNTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        suppliedParameters: _objectSpread(_objectSpread({}, state.suppliedParameters), {}, {\n          CISNumber: action.payload.CISNumber\n        }),\n        errtor: initState.error,\n        isFetchingAccounts: true\n      });\n\n    case FETCH_ACCOUNTS_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        isFetchingAccounts: false\n      });\n\n    case FETCH_ACCOUNTS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: action.payload.list,\n        listById: action.payload.listById,\n        suppliedParameters: _objectSpread(_objectSpread({}, state.suppliedParameters), {}, {\n          CISNumber: initState.suppliedParameters.CISNumber\n        }),\n        isFetchingAccounts: false\n      });\n\n    case FETCH_ACCOUNT_HISTORY_INITIALIZE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        historyList: initState.historyList,\n        historyListById: initState.historyListById,\n        suppliedParameters: _objectSpread(_objectSpread({}, state.suppliedParameters), {}, {\n          accountNumber: initState.suppliedParameters.accountNumber,\n          historyCount: initState.suppliedParameters.historyCount\n        })\n      });\n\n    case FETCH_ACCOUNT_HISTORY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        suppliedParameters: _objectSpread(_objectSpread({}, state.suppliedParameters), {}, {\n          accountNumber: action.payload.accountNumber,\n          historyCount: action.payload.historyCount\n        }),\n        error: initState.error,\n        isFetchingAccountHistory: true\n      });\n\n    case FETCH_ACCOUNT_HISTORY_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        isFetchingAccountHistory: false\n      });\n\n    case FETCH_ACCOUNT_HISTORY_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        historyList: action.payload.historyList,\n        historyListById: action.payload.historyListById,\n        suppliedParameters: _objectSpread(_objectSpread({}, state.suppliedParameters), {}, {\n          accountNumber: initState.suppliedParameters.accountNumber,\n          historyCount: initState.suppliedParameters.historyCount\n        }),\n        isFetchingAccountHistory: false\n      });\n\n    case FETCH_ACCOUNT_INFO_INITIALIZE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        infoList: initState.infoList,\n        infoListById: initState.infoListById,\n        suppliedParameters: _objectSpread(_objectSpread({}, state.suppliedParameters), {}, {\n          accountNumber: initState.suppliedParameters.accountNumber\n        })\n      });\n\n    case FETCH_ACCOUNT_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        suppliedParameters: _objectSpread(_objectSpread({}, state.suppliedParameters), {}, {\n          accountNumber: action.payload.accountNumber\n        }),\n        error: initState.error,\n        isFetchingAccountInfo: true\n      });\n\n    case FETCH_ACCOUNT_INFO_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload.error\n      });\n\n    case FETCH_ACCOUNT_INFO_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        infoList: action.payload.infoList,\n        infoListById: action.payload.infoListById,\n        suppliedParameters: _objectSpread(_objectSpread({}, state.suppliedParameters), {}, {\n          accountNumber: initState.suppliedParameters.accountNumber\n        })\n      });\n\n    default:\n      return state;\n  }\n};\nexport default account;","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/redux/account/reducer.js"],"names":["FETCH_ACCOUNTS_INITIALIZE","FETCH_ACCOUNTS","FETCH_ACCOUNTS_ERROR","FETCH_ACCOUNTS_SUCCESS","FETCH_ACCOUNT_HISTORY_INITIALIZE","FETCH_ACCOUNT_HISTORY","FETCH_ACCOUNT_HISTORY_ERROR","FETCH_ACCOUNT_HISTORY_SUCCESS","FETCH_ACCOUNT_INFO_INITIALIZE","FETCH_ACCOUNT_INFO","FETCH_ACCOUNT_INFO_ERROR","FETCH_ACCOUNT_INFO_SUCCESS","initState","historyList","historyListById","infoList","infoListById","list","listById","suppliedParameters","accountNumber","historyCount","CISNumber","error","isFetchingAccounts","isFetchingAccountHistory","isFetchingAccountInfo","account","state","action","type","payload","errtor"],"mappings":"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","sourcesContent":["import {\n  FETCH_ACCOUNTS_INITIALIZE,\n  FETCH_ACCOUNTS,\n  FETCH_ACCOUNTS_ERROR,\n  FETCH_ACCOUNTS_SUCCESS,\n  FETCH_ACCOUNT_HISTORY_INITIALIZE,\n  FETCH_ACCOUNT_HISTORY,\n  FETCH_ACCOUNT_HISTORY_ERROR,\n  FETCH_ACCOUNT_HISTORY_SUCCESS,\n  FETCH_ACCOUNT_INFO_INITIALIZE,\n  FETCH_ACCOUNT_INFO,\n  FETCH_ACCOUNT_INFO_ERROR,\n  FETCH_ACCOUNT_INFO_SUCCESS,\n} from \"../actions\";\n\nconst initState = {\n  historyList: {},\n  historyListById: [],\n  infoList: {},\n  infoListById: [],\n  list: {},\n  listById: [],\n  suppliedParameters: {\n    accountNumber: \"\",\n    historyCount: 0,\n    CISNumber: \"\",\n  },\n  error: null,\n  isFetchingAccounts: false,\n  isFetchingAccountHistory: false,\n  isFetchingAccountInfo: false,\n};\n\nexport const account = (state = initState, action) => {\n  switch (action.type) {\n    case FETCH_ACCOUNTS_INITIALIZE:\n      return {\n        ...state,\n        list: initState.list,\n        listById: initState.listById,\n        suppliedParameters: {\n          ...state.suppliedParameters,\n          CISNumber: initState.suppliedParameters.CISNumber,\n        },\n      };\n    case FETCH_ACCOUNTS:\n      return {\n        ...state,\n        suppliedParameters: {\n          ...state.suppliedParameters,\n          CISNumber: action.payload.CISNumber,\n        },\n        errtor: initState.error,\n        isFetchingAccounts: true,\n      };\n    case FETCH_ACCOUNTS_ERROR:\n      return { ...state, error: action.error, isFetchingAccounts: false };\n    case FETCH_ACCOUNTS_SUCCESS:\n      return {\n        ...state,\n        list: action.payload.list,\n        listById: action.payload.listById,\n        suppliedParameters: {\n          ...state.suppliedParameters,\n          CISNumber: initState.suppliedParameters.CISNumber,\n        },\n        isFetchingAccounts: false,\n      };\n    case FETCH_ACCOUNT_HISTORY_INITIALIZE:\n      return {\n        ...state,\n        historyList: initState.historyList,\n        historyListById: initState.historyListById,\n        suppliedParameters: {\n          ...state.suppliedParameters,\n          accountNumber: initState.suppliedParameters.accountNumber,\n          historyCount: initState.suppliedParameters.historyCount,\n        },\n      };\n    case FETCH_ACCOUNT_HISTORY:\n      return {\n        ...state,\n        suppliedParameters: {\n          ...state.suppliedParameters,\n          accountNumber: action.payload.accountNumber,\n          historyCount: action.payload.historyCount,\n        },\n        error: initState.error,\n        isFetchingAccountHistory: true,\n      };\n    case FETCH_ACCOUNT_HISTORY_ERROR:\n      return { ...state, error: action.error, isFetchingAccountHistory: false };\n    case FETCH_ACCOUNT_HISTORY_SUCCESS:\n      return {\n        ...state,\n        historyList: action.payload.historyList,\n        historyListById: action.payload.historyListById,\n        suppliedParameters: {\n          ...state.suppliedParameters,\n          accountNumber: initState.suppliedParameters.accountNumber,\n          historyCount: initState.suppliedParameters.historyCount,\n        },\n        isFetchingAccountHistory: false,\n      };\n    case FETCH_ACCOUNT_INFO_INITIALIZE:\n      return {\n        ...state,\n        infoList: initState.infoList,\n        infoListById: initState.infoListById,\n        suppliedParameters: {\n          ...state.suppliedParameters,\n          accountNumber: initState.suppliedParameters.accountNumber,\n        },\n      };\n    case FETCH_ACCOUNT_INFO:\n      return {\n        ...state,\n        suppliedParameters: {\n          ...state.suppliedParameters,\n          accountNumber: action.payload.accountNumber,\n        },\n        error: initState.error,\n        isFetchingAccountInfo: true,\n      };\n    case FETCH_ACCOUNT_INFO_ERROR:\n      return { ...state, error: action.payload.error };\n    case FETCH_ACCOUNT_INFO_SUCCESS:\n      return {\n        ...state,\n        infoList: action.payload.infoList,\n        infoListById: action.payload.infoListById,\n        suppliedParameters: {\n          ...state.suppliedParameters,\n          accountNumber: initState.suppliedParameters.accountNumber,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default account;\n"]},"metadata":{},"sourceType":"module"}
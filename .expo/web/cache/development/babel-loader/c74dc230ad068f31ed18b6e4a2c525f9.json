{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/navigation/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { AuthNavigation, MainNavigation, TesterNavigation } from \"./routes\";\nimport { DefaultTheme, NavigationContainer } from \"@react-navigation/native\";\nimport React, { useEffect } from \"react\";\nimport { hasHardwareAsync, isEnrolledAsync } from \"expo-local-authentication\";\nimport { setFingerprintCompatibility, setFingerprintEnrolled } from \"../redux/application/actions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { navigationRef } from \"./NavigationService\";\nvar TESTING_MODE = false;\n\nvar MyTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: \"#FFFFFF\"\n  })\n});\n\nvar Navigator = function Navigator(_ref) {\n  var isLoggedIn = _ref.auth.status.isLoggedIn,\n      info = _ref.user.info,\n      setCompatibility = _ref.setCompatibility,\n      setEnrolled = _ref.setEnrolled;\n  useEffect(function () {\n    checkDeviceHardware();\n    checkEnrolledFingerprints();\n  }, []);\n\n  var checkDeviceHardware = function checkDeviceHardware() {\n    var isHardwareSupported;\n    return _regeneratorRuntime.async(function checkDeviceHardware$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(hasHardwareAsync());\n\n          case 2:\n            isHardwareSupported = _context.sent;\n            setCompatibility(isHardwareSupported);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkEnrolledFingerprints = function checkEnrolledFingerprints() {\n    var hasEnrolledFingerprint;\n    return _regeneratorRuntime.async(function checkEnrolledFingerprints$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(isEnrolledAsync());\n\n          case 2:\n            hasEnrolledFingerprint = _context2.sent;\n            setEnrolled(hasEnrolledFingerprint);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (TESTING_MODE) {\n    return React.createElement(NavigationContainer, {\n      theme: MyTheme,\n      ref: navigationRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, React.createElement(TesterNavigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(NavigationContainer, {\n    theme: MyTheme,\n    ref: navigationRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, isLoggedIn && info ? React.createElement(MainNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }) : React.createElement(AuthNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var auth = _ref2.auth,\n      user = _ref2.user;\n  return {\n    auth: auth,\n    user: user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setCompatibility: function setCompatibility(isCompatible) {\n      dispatch(setFingerprintCompatibility(isCompatible));\n    },\n    setEnrolled: function setEnrolled(isEnrolled) {\n      dispatch(setFingerprintEnrolled(isEnrolled));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigator);","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/navigation/index.js"],"names":["AuthNavigation","MainNavigation","TesterNavigation","DefaultTheme","NavigationContainer","React","useEffect","hasHardwareAsync","isEnrolledAsync","setFingerprintCompatibility","setFingerprintEnrolled","PropTypes","connect","navigationRef","TESTING_MODE","MyTheme","colors","background","Navigator","isLoggedIn","auth","status","info","user","setCompatibility","setEnrolled","checkDeviceHardware","checkEnrolledFingerprints","isHardwareSupported","hasEnrolledFingerprint","mapStateToProps","mapDispatchToProps","dispatch","isCompatible","isEnrolled"],"mappings":"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","sourcesContent":["import { AuthNavigation, MainNavigation, TesterNavigation } from \"./routes\";\nimport { DefaultTheme, NavigationContainer } from \"@react-navigation/native\";\nimport React, { useEffect } from \"react\";\nimport { hasHardwareAsync, isEnrolledAsync } from \"expo-local-authentication\";\nimport {\n  setFingerprintCompatibility,\n  setFingerprintEnrolled,\n} from \"../redux/application/actions\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { navigationRef } from \"./NavigationService\";\n\nconst TESTING_MODE = false;\n\n// Theme\nconst MyTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    background: \"#FFFFFF\",\n  },\n};\n\nconst Navigator = ({\n  auth: {\n    status: { isLoggedIn },\n  },\n  user: {\n    info\n  },\n  setCompatibility,\n  setEnrolled,\n}) => {\n  // Check fingerprint compatibility and enrollment\n  useEffect(() => {\n    checkDeviceHardware();\n    checkEnrolledFingerprints();\n  }, []);\n\n  const checkDeviceHardware = async () => {\n    const isHardwareSupported = await hasHardwareAsync();\n    setCompatibility(isHardwareSupported);\n  };\n\n  const checkEnrolledFingerprints = async () => {\n    const hasEnrolledFingerprint = await isEnrolledAsync();\n    setEnrolled(hasEnrolledFingerprint);\n  };\n\n  if(TESTING_MODE) {\n    return (\n      <NavigationContainer theme={MyTheme} ref={navigationRef}>\n        <TesterNavigation />\n      </NavigationContainer>\n      \n    )\n  }\n\n  return (\n    <NavigationContainer theme={MyTheme} ref={navigationRef}>\n      {isLoggedIn && info ? \n        <MainNavigation /> :\n        <AuthNavigation />}\n    </NavigationContainer>\n  );\n};\n\nconst mapStateToProps = ({ auth, user }) => ({\n  auth,\n  user\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCompatibility: (isCompatible) => {\n    dispatch(setFingerprintCompatibility(isCompatible));\n  },\n  setEnrolled: (isEnrolled) => {\n    dispatch(setFingerprintEnrolled(isEnrolled));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigator);\n"]},"metadata":{},"sourceType":"module"}
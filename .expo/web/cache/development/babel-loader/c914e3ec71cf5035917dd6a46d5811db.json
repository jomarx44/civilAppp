{"ast":null,"code":"import Alert from \"react-native-web/dist/exports/Alert\";\nimport { Toast } from \"native-base\";\nimport axios from \"axios\";\nimport querystring from \"querystring\";\nimport Constants from \"expo-constants\";\nimport AppJson from \"../../app.json\";\nimport { APIErrorLogging } from \"../library/helpers\";\naxios.defaults.baseURL = AppJson.appid.API_URL;\naxios.defaults.headers = {\n  \"Content-Type\": \"application/json\",\n  \"X-IBM-Client-Id\": AppJson.appid.IBM_CLIENT_ID,\n  \"Access-Control-Allow-Origin\": \"*\",\n  DeviceID: Constants.installationId,\n  DeviceName: Constants.deviceName\n};\naxios.defaults.timeout = 10000;\nexport var postMethod = function postMethod(json) {\n  var params = json[\"params\"];\n  var action_type = json[\"reducer_type\"];\n  return function (dispatch) {\n    dispatch({\n      type: action_type\n    });\n    return axios.post(json[\"path\"], params).then(function (response) {\n      console.log('response', response);\n\n      if (response.data.success == true) {\n        action_type = action_type + \"_SUCCESS\";\n        dispatch(responseData(response.data, action_type, params));\n      } else {\n        action_type = action_type + \"_ERROR\";\n        dispatch(responseData(response.data, action_type, params));\n      }\n\n      if (response.data.message && (!response.data.success || json[\"reducer_type\"] != \"LOGIN\")) {\n        alertBox(response.data.message);\n      }\n    }).catch(function (error) {\n      APIErrorLogging(\"postMethod\", error);\n\n      if (json[\"reducer_type\"] === \"LOGIN\") {\n        alertBox(\"Ooops! There's something wrong connecting to the server.\");\n      } else {\n        alertBox(error.request._response);\n      }\n    });\n  };\n};\nexport var postMethodWithToken = function postMethodWithToken(json) {\n  var params = json[\"params\"];\n  var action_type = json[\"reducer_type\"];\n\n  if (json[\"token\"] !== null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Token: json[\"token\"],\n      \"Access-Control-Allow-Origin\": \"*\"\n    };\n  }\n\n  return function (dispatch) {\n    return axios.post(json[\"path\"], params).then(function (response) {\n      if (response.data.success == true || response.data.status == \"ok\") {\n        action_type = action_type + \"_SUCCESS\";\n        dispatch(responseData(response.data, action_type, params));\n      } else {\n        action_type = action_type + \"_ERROR\";\n        dispatch(responseData(response.data, action_type, params));\n      }\n    }).catch(function (error) {\n      APIErrorLogging(\"postMethodWithToken\", error);\n      alertBox(error.request._response);\n    });\n  };\n};\nexport var postMethodWithTokenApply = function postMethodWithTokenApply(json) {\n  var params = json[\"params\"];\n  var action_type = json[\"reducer_type\"];\n\n  if (json[\"token\"] !== null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Token: json[\"token\"],\n      \"Access-Control-Allow-Origin\": \"*\"\n    };\n  }\n\n  return function (dispatch) {\n    return axios.post(json[\"path\"], params).then(function (response) {\n      if (response.data.message == \"Success\") {\n        action_type = action_type + \"_SUCCESS\";\n        dispatch(responseData(response.data, action_type, params));\n      } else {\n        action_type = action_type + \"_ERROR\";\n        dispatch(responseData(response.data, action_type, params));\n      }\n\n      alertBox(response.data.message);\n    }).catch(function (error) {\n      APIErrorLogging(\"postMethodWithTokenApply\", error);\n      alertBox(error.request._response.message);\n    });\n  };\n};\nexport var postData = function postData(json) {\n  var params = json[\"params\"];\n  var action_type = json[\"reducer_type\"];\n  return function (dispatch) {\n    return axios.post(json[\"path\"], params).then(function (response) {\n      if (response.data.status == \"ok\") {\n        action_type = action_type + \"_SUCCESS\";\n        dispatch(responseData(response.data, action_type, params));\n      } else {\n        action_type = action_type + \"_ERROR\";\n        dispatch(responseData(response.data, action_type, params));\n      }\n\n      if (response.data.message && json[\"reducer_type\"] != \"LOGIN\") {\n        alertBox(response.data.message);\n      }\n    }).catch(function (error) {\n      APIErrorLogging(\"postData\", error);\n      alertBox(error.request._response);\n    });\n  };\n};\nexport var getMethod = function getMethod(json) {\n  var params = json[\"params\"];\n  var action_type = json[\"reducer_type\"];\n  return function (dispatch) {\n    return axios.get(json[\"path\"], params).then(function (response) {\n      if (response.data.status == \"ok\") {\n        action_type = action_type + \"_SUCCESS\";\n        dispatch(responseData(response.data, action_type, params));\n      } else {\n        action_type = action_type + \"_ERROR\";\n        dispatch(responseData(response.data, action_type, params));\n      }\n\n      if (response.data.message) {\n        alertBox(response.data.message);\n      }\n    }).catch(function (error) {\n      APIErrorLogging(\"getMethod\", error);\n    });\n  };\n};\nexport var getMethodWithToken = function getMethodWithToken(json) {\n  var params = json[\"params\"];\n  var action_type = json[\"reducer_type\"];\n\n  if (json[\"token\"] !== null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Token: json[\"token\"],\n      \"Access-Control-Allow-Origin\": \"*\"\n    };\n  }\n\n  return function (dispatch) {\n    return axios.get(json[\"path\"], params).then(function (response) {\n      action_type = action_type + \"_SUCCESS\";\n      dispatch(responseData(response.data, action_type, params));\n    }).catch(function (error) {\n      APIErrorLogging(\"getMethodWithToken\", error);\n    });\n  };\n};\nexport var putMethod = function putMethod(json) {\n  var params = json[\"params\"];\n  var action_type = json[\"reducer_type\"];\n  return function (dispatch) {\n    return axios.put(json[\"path\"], params).then(function (response) {\n      if (response.data.status == \"ok\") {\n        action_type = action_type + \"_SUCCESS\";\n        dispatch(responseData(response.data, action_type, params));\n      } else {\n        action_type = action_type + \"_ERROR\";\n        dispatch(responseData(response.data, action_type, params));\n      }\n\n      if (response.data.message) {\n        alertBox(response.data.message);\n      }\n    }).catch(function (error) {\n      APIErrorLogging(\"putMethod\", error);\n    });\n  };\n};\nexport var putMethodWithToken = function putMethodWithToken(json) {\n  var params = json[\"params\"];\n  var action_type = json[\"reducer_type\"];\n\n  if (json[\"token\"] !== null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Token: json[\"token\"],\n      \"Access-Control-Allow-Origin\": \"*\"\n    };\n  }\n\n  return function (dispatch) {\n    return axios.put(json[\"path\"], params).then(function (response) {\n      if (response.data.status == \"ok\") {\n        action_type = action_type + \"_SUCCESS\";\n        dispatch(responseData(response.data, action_type, params));\n      } else {\n        action_type = action_type + \"_ERROR\";\n        dispatch(responseData(response.data, action_type, params));\n      }\n\n      if (response.data.message && json[\"reducer_type\"] == \"UPDATE_PASSWORD\") {\n        alertBox(response.data.message);\n      }\n    }).catch(function (error) {\n      APIErrorLogging(\"putMethodWithToken\", error);\n    });\n  };\n};\nexport var deleteData = function deleteData(json) {\n  var url = getPath(json);\n  return function (dispatch) {\n    return axios.get(url).then(function (response) {\n      dispatch(success(response.data));\n    }).catch(function (error) {\n      APIErrorLogging(\"deleteData\", error);\n    });\n  };\n};\nexport var getData = function getData(json) {\n  var url = getPath(json);\n  var action_type = json[\"reducer_type\"];\n  return function (dispatch) {\n    return axios.get(url).then(function (response) {\n      if (response.data.status == \"ok\") {\n        action_type = action_type + \"_SUCCESS\";\n        dispatch(responseData(response.data, action_type, {}));\n      } else {\n        action_type = action_type + \"_ERROR\";\n        dispatch(responseData(response.data, action_type, {}));\n      }\n    }).catch(function (error) {\n      APIErrorLogging(\"getData\", error);\n    });\n  };\n};\nexport var postOnly = function postOnly(json) {\n  var path = json.path,\n      body = json.body;\n  return axios.post(path, body);\n};\nexport var getDataOnly = function getDataOnly(json) {\n  var path = getPath(json);\n  return axios.get(path);\n};\nexport var putOnly = function putOnly(json) {\n  var body = json.body;\n  var path = getPath(json);\n  return axios.put(path, body);\n};\nexport var responseData = function responseData(data, type, params) {\n  return {\n    type: type,\n    payload: data,\n    params: params\n  };\n};\nexport var dispatchOnly = function dispatchOnly(json) {\n  var action_type = json[\"reducer_type\"];\n  return function (dispatch) {\n    dispatch({\n      type: action_type,\n      payload: {}\n    });\n  };\n};\nexport var dispatchWithPayload = function dispatchWithPayload(json) {\n  var params = json[\"params\"];\n  var action_type = json[\"reducer_type\"];\n  var payload = json[\"payload\"];\n  return function (dispatch) {\n    dispatch({\n      type: action_type,\n      payload: payload\n    });\n  };\n};\n\nvar getPath = function getPath(json) {\n  var path = json[\"path\"];\n  var params = querystring.stringify(json[\"params\"]);\n  var url = path + \"?\" + params;\n  return url;\n};\n\nexport var alertBox = function alertBox(error) {\n  Alert.alert(\"Sun Savings Bank\", error);\n};","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/actions/axiosCalls.js"],"names":["Toast","axios","querystring","Constants","AppJson","APIErrorLogging","defaults","baseURL","appid","API_URL","headers","IBM_CLIENT_ID","DeviceID","installationId","DeviceName","deviceName","timeout","postMethod","json","params","action_type","dispatch","type","post","then","response","console","log","data","success","responseData","message","alertBox","catch","error","request","_response","postMethodWithToken","Token","status","postMethodWithTokenApply","postData","getMethod","get","getMethodWithToken","putMethod","put","putMethodWithToken","deleteData","url","getPath","getData","postOnly","path","body","getDataOnly","putOnly","payload","dispatchOnly","dispatchWithPayload","stringify","Alert","alert"],"mappings":"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","sourcesContent":["import { Alert } from \"react-native\";\nimport { Toast } from \"native-base\";\nimport axios from \"axios\";\nimport querystring from \"querystring\";\nimport Constants from \"expo-constants\";\nimport AppJson from \"../../app.json\";\nimport { APIErrorLogging } from \"../library/helpers\";\n\naxios.defaults.baseURL = AppJson.appid.API_URL;\naxios.defaults.headers = {\n  \"Content-Type\": \"application/json\",\n  \"X-IBM-Client-Id\": AppJson.appid.IBM_CLIENT_ID,\n  \"Access-Control-Allow-Origin\": \"*\",\n  DeviceID: Constants.installationId,\n  DeviceName: Constants.deviceName,\n};\naxios.defaults.timeout = 10000;\n\n// POST METHOD\nexport const postMethod = (json) => {\n  const params = json[\"params\"];\n  let action_type = json[\"reducer_type\"];\n  return (dispatch) => {\n    dispatch({\n      type: action_type,\n    });\n    return axios\n      .post(json[\"path\"], params)\n      .then((response) => {\n        console.log('response', response);\n        if (response.data.success == true) {\n          action_type = action_type + \"_SUCCESS\";\n          dispatch(responseData(response.data, action_type, params));\n        } else {\n          action_type = action_type + \"_ERROR\";\n          dispatch(responseData(response.data, action_type, params));\n        }\n\n        if (\n          response.data.message &&\n          (!response.data.success || json[\"reducer_type\"] != \"LOGIN\")\n        ) {\n          alertBox(response.data.message);\n        }\n      })\n      .catch((error) => {\n        APIErrorLogging(\"postMethod\", error);\n        if (json[\"reducer_type\"] === \"LOGIN\") {\n          alertBox(\"Ooops! There's something wrong connecting to the server.\");\n        } else {\n          alertBox(error.request._response);\n        }\n      });\n  };\n};\n\n// POST METHOD WITH TOKEN\nexport const postMethodWithToken = (json) => {\n  const params = json[\"params\"];\n  let action_type = json[\"reducer_type\"];\n\n  if (json[\"token\"] !== null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Token: json[\"token\"],\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n  }\n\n  return (dispatch) => {\n    return axios\n      .post(json[\"path\"], params)\n      .then((response) => {\n        if (response.data.success == true || response.data.status == \"ok\") {\n          action_type = action_type + \"_SUCCESS\";\n          dispatch(responseData(response.data, action_type, params));\n        } else {\n          action_type = action_type + \"_ERROR\";\n\n          dispatch(responseData(response.data, action_type, params));\n        }\n        //alertBox(response.data.message);\n      })\n      .catch((error) => {\n        APIErrorLogging(\"postMethodWithToken\", error);\n        alertBox(error.request._response);\n      });\n  };\n};\n\n// POST METHOD WITH TOKEN\nexport const postMethodWithTokenApply = (json) => {\n  const params = json[\"params\"];\n  let action_type = json[\"reducer_type\"];\n\n  if (json[\"token\"] !== null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Token: json[\"token\"],\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n  }\n\n  return (dispatch) => {\n    return axios\n      .post(json[\"path\"], params)\n      .then((response) => {\n        if (response.data.message == \"Success\") {\n          action_type = action_type + \"_SUCCESS\";\n          dispatch(responseData(response.data, action_type, params));\n        } else {\n          action_type = action_type + \"_ERROR\";\n          dispatch(responseData(response.data, action_type, params));\n        }\n        alertBox(response.data.message);\n      })\n      .catch((error) => {\n        APIErrorLogging(\"postMethodWithTokenApply\", error);\n        alertBox(error.request._response.message);\n      });\n  };\n};\n\n// POST METHOD\nexport const postData = (json) => {\n  const params = json[\"params\"];\n  let action_type = json[\"reducer_type\"];\n  return (dispatch) => {\n    return axios\n      .post(json[\"path\"], params)\n      .then((response) => {\n        if (response.data.status == \"ok\") {\n          action_type = action_type + \"_SUCCESS\";\n          dispatch(responseData(response.data, action_type, params));\n        } else {\n          action_type = action_type + \"_ERROR\";\n          dispatch(responseData(response.data, action_type, params));\n        }\n        if (response.data.message && json[\"reducer_type\"] != \"LOGIN\") {\n          alertBox(response.data.message);\n        }\n      })\n      .catch((error) => {\n        APIErrorLogging(\"postData\", error);\n        alertBox(error.request._response);\n      });\n  };\n};\n\n// GET METHOD\nexport const getMethod = (json) => {\n  const params = json[\"params\"];\n  let action_type = json[\"reducer_type\"];\n  return (dispatch) => {\n    return axios\n      .get(json[\"path\"], params)\n      .then((response) => {\n        if (response.data.status == \"ok\") {\n          action_type = action_type + \"_SUCCESS\";\n          dispatch(responseData(response.data, action_type, params));\n        } else {\n          action_type = action_type + \"_ERROR\";\n          dispatch(responseData(response.data, action_type, params));\n        }\n        if (response.data.message) {\n          alertBox(response.data.message);\n        }\n      })\n      .catch((error) => {\n        APIErrorLogging(\"getMethod\", error);\n      });\n  };\n};\n\n// GET METHOD WITH TOKEN\nexport const getMethodWithToken = (json) => {\n  const params = json[\"params\"];\n  let action_type = json[\"reducer_type\"];\n\n  if (json[\"token\"] !== null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Token: json[\"token\"],\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n  }\n  return (dispatch) => {\n    return axios\n      .get(json[\"path\"], params)\n      .then((response) => {\n        action_type = action_type + \"_SUCCESS\";\n        dispatch(responseData(response.data, action_type, params));\n        //alertBox(response.data.message);\n      })\n      .catch((error) => {\n        APIErrorLogging(\"getMethodWithToken\", error);\n      });\n  };\n};\n\n// PUT METHOD\nexport const putMethod = (json) => {\n  const params = json[\"params\"];\n  let action_type = json[\"reducer_type\"];\n  return (dispatch) => {\n    return axios\n      .put(json[\"path\"], params)\n      .then((response) => {\n        if (response.data.status == \"ok\") {\n          action_type = action_type + \"_SUCCESS\";\n          dispatch(responseData(response.data, action_type, params));\n        } else {\n          action_type = action_type + \"_ERROR\";\n          dispatch(responseData(response.data, action_type, params));\n        }\n        if (response.data.message) {\n          alertBox(response.data.message);\n        }\n      })\n      .catch((error) => {\n        APIErrorLogging(\"putMethod\", error);\n      });\n  };\n};\n\n// PUT METHOD\nexport const putMethodWithToken = (json) => {\n  const params = json[\"params\"];\n  let action_type = json[\"reducer_type\"];\n\n  if (json[\"token\"] !== null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Token: json[\"token\"],\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n  }\n\n  return (dispatch) => {\n    return axios\n      .put(json[\"path\"], params)\n      .then((response) => {\n        if (response.data.status == \"ok\") {\n          action_type = action_type + \"_SUCCESS\";\n          dispatch(responseData(response.data, action_type, params));\n        } else {\n          action_type = action_type + \"_ERROR\";\n          dispatch(responseData(response.data, action_type, params));\n        }\n        if (\n          response.data.message &&\n          json[\"reducer_type\"] == \"UPDATE_PASSWORD\"\n        ) {\n          alertBox(response.data.message);\n        }\n        // if (response.data.message && json[\"reducer_type\"]) {\n        //   alertBox(response.data.message);\n        // }\n      })\n      .catch((error) => {\n        APIErrorLogging(\"putMethodWithToken\", error);\n      });\n  };\n};\n\n//DELETE\nexport const deleteData = (json) => {\n  const url = getPath(json);\n  return (dispatch) => {\n    return axios\n      .get(url)\n      .then((response) => {\n        dispatch(success(response.data));\n      })\n      .catch((error) => {\n        APIErrorLogging(\"deleteData\", error);\n      });\n  };\n};\n\n// GET METHOD\nexport const getData = (json) => {\n  const url = getPath(json);\n  let action_type = json[\"reducer_type\"];\n  return (dispatch) => {\n    return axios\n      .get(url)\n      .then((response) => {\n        if (response.data.status == \"ok\") {\n          action_type = action_type + \"_SUCCESS\";\n          dispatch(responseData(response.data, action_type, {}));\n        } else {\n          action_type = action_type + \"_ERROR\";\n          dispatch(responseData(response.data, action_type, {}));\n        }\n      })\n      .catch((error) => {\n        APIErrorLogging(\"getData\", error);\n      });\n  };\n};\n\nexport const postOnly = (json) => {\n  const { path, body } = json;\n  return axios.post(path, body);\n};\n\n// Returns a Promise\nexport const getDataOnly = (json) => {\n  const path = getPath(json);\n  return axios.get(path);\n};\n\nexport const putOnly = (json) => {\n  const { body } = json;\n  const path = getPath(json);\n  return axios.put(path, body);\n};\n\nexport const responseData = (data, type, params) => {\n  return {\n    type: type,\n    payload: data,\n    params: params,\n  };\n};\n\nexport const dispatchOnly = (json) => {\n  let action_type = json[\"reducer_type\"];\n  return (dispatch) => {\n    dispatch({ type: action_type, payload: {} });\n  };\n};\n\nexport const dispatchWithPayload = (json) => {\n  const params = json[\"params\"];\n  let action_type = json[\"reducer_type\"];\n  let payload = json[\"payload\"];\n  return (dispatch) => {\n    dispatch({ type: action_type, payload: payload });\n  };\n};\n\nconst getPath = (json) => {\n  const path = json[\"path\"];\n  const params = querystring.stringify(json[\"params\"]);\n  const url = path + \"?\" + params;\n  return url;\n};\n\nexport const alertBox = (error) => {\n  Alert.alert(\"Sun Savings Bank\", error);\n};\n"]},"metadata":{},"sourceType":"module"}
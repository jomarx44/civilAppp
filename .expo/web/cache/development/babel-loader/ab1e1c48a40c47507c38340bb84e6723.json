{"ast":null,"code":"import AppJson from \"../../app.json\";\nimport Axios from \"axios\";\nimport Config from \"../../app.json\";\nimport Constants from \"expo-constants\";\nimport { captureException } from \"sentry-expo\";\nexport var mainInstance = Axios.create({\n  baseURL: Config.appid.API_URL,\n  timeout: 1000,\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    \"X-IBM-Client-Id\": AppJson.appid.IBM_CLIENT_ID,\n    \"DeviceID\": Constants.installationId,\n    \"DeviceName\": Constants.deviceName\n  }\n});\nexport var createIBMInstance = function createIBMInstance(accessToken) {\n  return Axios.create({\n    baseURL: Config.appid.APPID_AUTH_SERVER_HOST + \"/oauth/v4/\" + Config.appid.IBM_TENANT_ID + \"/\",\n    timeout: 1000,\n    headers: {\n      \"Authorization\": \"Bearer \" + accessToken\n    }\n  });\n};\nmainInstance.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  captureException(error);\n  return Promise.reject(error);\n});","map":{"version":3,"sources":["/Users/thadz/Desktop/SunSavings/fixedProfileAndTransfer/pnmobileapp/src/API/config.js"],"names":["AppJson","Axios","Config","Constants","captureException","mainInstance","create","baseURL","appid","API_URL","timeout","headers","IBM_CLIENT_ID","installationId","deviceName","createIBMInstance","accessToken","APPID_AUTH_SERVER_HOST","IBM_TENANT_ID","interceptors","response","use","error","Promise","reject"],"mappings":"AAAA,OAAOA,OAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,OAAO,IAAMC,YAAY,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACvCC,EAAAA,OAAO,EAAEL,MAAM,CAACM,KAAP,CAAaC,OADiB;AAEvCC,EAAAA,OAAO,EAAE,IAF8B;AAGvCC,EAAAA,OAAO,EAAE;AACP,mCAA+B,GADxB;AAEP,oBAAgB,kBAFT;AAGP,uBAAmBX,OAAO,CAACQ,KAAR,CAAcI,aAH1B;AAIP,gBAAYT,SAAS,CAACU,cAJf;AAKP,kBAAcV,SAAS,CAACW;AALjB;AAH8B,CAAb,CAArB;AAYP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,WAAD,EAAiB;AAChD,SAAOf,KAAK,CAACK,MAAN,CAAa;AAClBC,IAAAA,OAAO,EAAKL,MAAM,CAACM,KAAP,CAAaS,sBAAlB,kBAAqDf,MAAM,CAACM,KAAP,CAAaU,aAAlE,MADW;AAElBR,IAAAA,OAAO,EAAE,IAFS;AAGlBC,IAAAA,OAAO,EAAE;AACP,mCAA2BK;AADpB;AAHS,GAAb,CAAP;AAOD,CARM;AAWPX,YAAY,CAACc,YAAb,CAA0BC,QAA1B,CAAmCC,GAAnC,CAAuC,UAACD,QAAD,EAAc;AACnD,SAAOA,QAAP;AACD,CAFD,EAEG,UAACE,KAAD,EAAW;AACZlB,EAAAA,gBAAgB,CAACkB,KAAD,CAAhB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CALD","sourcesContent":["import AppJson from \"../../app.json\";\nimport Axios from \"axios\";\nimport Config from \"../../app.json\";\nimport Constants from \"expo-constants\";\nimport { captureException } from \"sentry-expo\"\n\nexport const mainInstance = Axios.create({\n  baseURL: Config.appid.API_URL,\n  timeout: 1000,\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    \"X-IBM-Client-Id\": AppJson.appid.IBM_CLIENT_ID,\n    \"DeviceID\": Constants.installationId,\n    \"DeviceName\": Constants.deviceName\n  },\n});\n\nexport const createIBMInstance = (accessToken) => {\n  return Axios.create({\n    baseURL: `${Config.appid.APPID_AUTH_SERVER_HOST}/oauth/v4/${Config.appid.IBM_TENANT_ID}/`,\n    timeout: 1000,\n    headers: {\n      \"Authorization\": `Bearer ${accessToken}`\n    }\n  });\n};\n\n// For online error logging\nmainInstance.interceptors.response.use((response) => {\n  return response;\n}, (error) => {\n  captureException(error)\n  return Promise.reject(error);\n})"]},"metadata":{},"sourceType":"module"}